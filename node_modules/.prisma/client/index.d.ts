
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model posts
 * 
 */
export type posts = $Result.DefaultSelection<Prisma.$postsPayload>
/**
 * Model posts_like
 * 
 */
export type posts_like = $Result.DefaultSelection<Prisma.$posts_likePayload>
/**
 * Model answers
 * 
 */
export type answers = $Result.DefaultSelection<Prisma.$answersPayload>
/**
 * Model vote_up
 * 
 */
export type vote_up = $Result.DefaultSelection<Prisma.$vote_upPayload>
/**
 * Model vote_down
 * 
 */
export type vote_down = $Result.DefaultSelection<Prisma.$vote_downPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;

  /**
   * `prisma.posts`: Exposes CRUD operations for the **posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.posts.findMany()
    * ```
    */
  get posts(): Prisma.postsDelegate<ExtArgs>;

  /**
   * `prisma.posts_like`: Exposes CRUD operations for the **posts_like** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts_likes
    * const posts_likes = await prisma.posts_like.findMany()
    * ```
    */
  get posts_like(): Prisma.posts_likeDelegate<ExtArgs>;

  /**
   * `prisma.answers`: Exposes CRUD operations for the **answers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Answers
    * const answers = await prisma.answers.findMany()
    * ```
    */
  get answers(): Prisma.answersDelegate<ExtArgs>;

  /**
   * `prisma.vote_up`: Exposes CRUD operations for the **vote_up** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vote_ups
    * const vote_ups = await prisma.vote_up.findMany()
    * ```
    */
  get vote_up(): Prisma.vote_upDelegate<ExtArgs>;

  /**
   * `prisma.vote_down`: Exposes CRUD operations for the **vote_down** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Vote_downs
    * const vote_downs = await prisma.vote_down.findMany()
    * ```
    */
  get vote_down(): Prisma.vote_downDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    users: 'users',
    posts: 'posts',
    posts_like: 'posts_like',
    answers: 'answers',
    vote_up: 'vote_up',
    vote_down: 'vote_down'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "users" | "posts" | "posts_like" | "answers" | "vote_up" | "vote_down"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      posts: {
        payload: Prisma.$postsPayload<ExtArgs>
        fields: Prisma.postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          findFirst: {
            args: Prisma.postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          findMany: {
            args: Prisma.postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>[]
          }
          create: {
            args: Prisma.postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          createMany: {
            args: Prisma.postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          update: {
            args: Prisma.postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          deleteMany: {
            args: Prisma.postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$postsPayload>
          }
          aggregate: {
            args: Prisma.PostsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePosts>
          }
          groupBy: {
            args: Prisma.postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostsGroupByOutputType>[]
          }
          count: {
            args: Prisma.postsCountArgs<ExtArgs>
            result: $Utils.Optional<PostsCountAggregateOutputType> | number
          }
        }
      }
      posts_like: {
        payload: Prisma.$posts_likePayload<ExtArgs>
        fields: Prisma.posts_likeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.posts_likeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.posts_likeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload>
          }
          findFirst: {
            args: Prisma.posts_likeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.posts_likeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload>
          }
          findMany: {
            args: Prisma.posts_likeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload>[]
          }
          create: {
            args: Prisma.posts_likeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload>
          }
          createMany: {
            args: Prisma.posts_likeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.posts_likeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload>
          }
          update: {
            args: Prisma.posts_likeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload>
          }
          deleteMany: {
            args: Prisma.posts_likeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.posts_likeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.posts_likeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$posts_likePayload>
          }
          aggregate: {
            args: Prisma.Posts_likeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePosts_like>
          }
          groupBy: {
            args: Prisma.posts_likeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Posts_likeGroupByOutputType>[]
          }
          count: {
            args: Prisma.posts_likeCountArgs<ExtArgs>
            result: $Utils.Optional<Posts_likeCountAggregateOutputType> | number
          }
        }
      }
      answers: {
        payload: Prisma.$answersPayload<ExtArgs>
        fields: Prisma.answersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.answersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.answersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload>
          }
          findFirst: {
            args: Prisma.answersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.answersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload>
          }
          findMany: {
            args: Prisma.answersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload>[]
          }
          create: {
            args: Prisma.answersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload>
          }
          createMany: {
            args: Prisma.answersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.answersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload>
          }
          update: {
            args: Prisma.answersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload>
          }
          deleteMany: {
            args: Prisma.answersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.answersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.answersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$answersPayload>
          }
          aggregate: {
            args: Prisma.AnswersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnswers>
          }
          groupBy: {
            args: Prisma.answersGroupByArgs<ExtArgs>
            result: $Utils.Optional<AnswersGroupByOutputType>[]
          }
          count: {
            args: Prisma.answersCountArgs<ExtArgs>
            result: $Utils.Optional<AnswersCountAggregateOutputType> | number
          }
        }
      }
      vote_up: {
        payload: Prisma.$vote_upPayload<ExtArgs>
        fields: Prisma.vote_upFieldRefs
        operations: {
          findUnique: {
            args: Prisma.vote_upFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.vote_upFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload>
          }
          findFirst: {
            args: Prisma.vote_upFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.vote_upFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload>
          }
          findMany: {
            args: Prisma.vote_upFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload>[]
          }
          create: {
            args: Prisma.vote_upCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload>
          }
          createMany: {
            args: Prisma.vote_upCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.vote_upDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload>
          }
          update: {
            args: Prisma.vote_upUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload>
          }
          deleteMany: {
            args: Prisma.vote_upDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.vote_upUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.vote_upUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_upPayload>
          }
          aggregate: {
            args: Prisma.Vote_upAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVote_up>
          }
          groupBy: {
            args: Prisma.vote_upGroupByArgs<ExtArgs>
            result: $Utils.Optional<Vote_upGroupByOutputType>[]
          }
          count: {
            args: Prisma.vote_upCountArgs<ExtArgs>
            result: $Utils.Optional<Vote_upCountAggregateOutputType> | number
          }
        }
      }
      vote_down: {
        payload: Prisma.$vote_downPayload<ExtArgs>
        fields: Prisma.vote_downFieldRefs
        operations: {
          findUnique: {
            args: Prisma.vote_downFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.vote_downFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload>
          }
          findFirst: {
            args: Prisma.vote_downFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.vote_downFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload>
          }
          findMany: {
            args: Prisma.vote_downFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload>[]
          }
          create: {
            args: Prisma.vote_downCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload>
          }
          createMany: {
            args: Prisma.vote_downCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.vote_downDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload>
          }
          update: {
            args: Prisma.vote_downUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload>
          }
          deleteMany: {
            args: Prisma.vote_downDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.vote_downUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.vote_downUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$vote_downPayload>
          }
          aggregate: {
            args: Prisma.Vote_downAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVote_down>
          }
          groupBy: {
            args: Prisma.vote_downGroupByArgs<ExtArgs>
            result: $Utils.Optional<Vote_downGroupByOutputType>[]
          }
          count: {
            args: Prisma.vote_downCountArgs<ExtArgs>
            result: $Utils.Optional<Vote_downCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    posts: number
    posts_like: number
    answers: number
    vote_up: number
    vote_down: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | UsersCountOutputTypeCountPostsArgs
    posts_like?: boolean | UsersCountOutputTypeCountPosts_likeArgs
    answers?: boolean | UsersCountOutputTypeCountAnswersArgs
    vote_up?: boolean | UsersCountOutputTypeCountVote_upArgs
    vote_down?: boolean | UsersCountOutputTypeCountVote_downArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountPosts_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: posts_likeWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: answersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountVote_upArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vote_upWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountVote_downArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vote_downWhereInput
  }


  /**
   * Count Type PostsCountOutputType
   */

  export type PostsCountOutputType = {
    posts_like: number
    answers: number
  }

  export type PostsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts_like?: boolean | PostsCountOutputTypeCountPosts_likeArgs
    answers?: boolean | PostsCountOutputTypeCountAnswersArgs
  }

  // Custom InputTypes
  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostsCountOutputType
     */
    select?: PostsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeCountPosts_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: posts_likeWhereInput
  }

  /**
   * PostsCountOutputType without action
   */
  export type PostsCountOutputTypeCountAnswersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: answersWhereInput
  }


  /**
   * Count Type AnswersCountOutputType
   */

  export type AnswersCountOutputType = {
    vote_up_relations: number
    vote_down_relations: number
  }

  export type AnswersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    vote_up_relations?: boolean | AnswersCountOutputTypeCountVote_up_relationsArgs
    vote_down_relations?: boolean | AnswersCountOutputTypeCountVote_down_relationsArgs
  }

  // Custom InputTypes
  /**
   * AnswersCountOutputType without action
   */
  export type AnswersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnswersCountOutputType
     */
    select?: AnswersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AnswersCountOutputType without action
   */
  export type AnswersCountOutputTypeCountVote_up_relationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vote_upWhereInput
  }

  /**
   * AnswersCountOutputType without action
   */
  export type AnswersCountOutputTypeCountVote_down_relationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vote_downWhereInput
  }


  /**
   * Models
   */

  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    full_name: string | null
    profile_url: string | null
    nidn_or_nim: string | null
    nama_perguruan_tinggi: string | null
    role: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    username: string | null
    password: string | null
    full_name: string | null
    profile_url: string | null
    nidn_or_nim: string | null
    nama_perguruan_tinggi: string | null
    role: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    password: number
    full_name: number
    profile_url: number
    nidn_or_nim: number
    nama_perguruan_tinggi: number
    role: number
    create_at: number
    update_at: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    full_name?: true
    profile_url?: true
    nidn_or_nim?: true
    nama_perguruan_tinggi?: true
    role?: true
    create_at?: true
    update_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    full_name?: true
    profile_url?: true
    nidn_or_nim?: true
    nama_perguruan_tinggi?: true
    role?: true
    create_at?: true
    update_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    full_name?: true
    profile_url?: true
    nidn_or_nim?: true
    nama_perguruan_tinggi?: true
    role?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    username: string
    password: string
    full_name: string | null
    profile_url: string | null
    nidn_or_nim: string | null
    nama_perguruan_tinggi: string | null
    role: string | null
    create_at: Date
    update_at: Date
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    full_name?: boolean
    profile_url?: boolean
    nidn_or_nim?: boolean
    nama_perguruan_tinggi?: boolean
    role?: boolean
    create_at?: boolean
    update_at?: boolean
    posts?: boolean | users$postsArgs<ExtArgs>
    posts_like?: boolean | users$posts_likeArgs<ExtArgs>
    answers?: boolean | users$answersArgs<ExtArgs>
    vote_up?: boolean | users$vote_upArgs<ExtArgs>
    vote_down?: boolean | users$vote_downArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>


  export type usersSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    full_name?: boolean
    profile_url?: boolean
    nidn_or_nim?: boolean
    nama_perguruan_tinggi?: boolean
    role?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | users$postsArgs<ExtArgs>
    posts_like?: boolean | users$posts_likeArgs<ExtArgs>
    answers?: boolean | users$answersArgs<ExtArgs>
    vote_up?: boolean | users$vote_upArgs<ExtArgs>
    vote_down?: boolean | users$vote_downArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      posts: Prisma.$postsPayload<ExtArgs>[]
      posts_like: Prisma.$posts_likePayload<ExtArgs>[]
      answers: Prisma.$answersPayload<ExtArgs>[]
      vote_up: Prisma.$vote_upPayload<ExtArgs>[]
      vote_down: Prisma.$vote_downPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      username: string
      password: string
      full_name: string | null
      profile_url: string | null
      nidn_or_nim: string | null
      nama_perguruan_tinggi: string | null
      role: string | null
      create_at: Date
      update_at: Date
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posts<T extends users$postsArgs<ExtArgs> = {}>(args?: Subset<T, users$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findMany"> | Null>
    posts_like<T extends users$posts_likeArgs<ExtArgs> = {}>(args?: Subset<T, users$posts_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "findMany"> | Null>
    answers<T extends users$answersArgs<ExtArgs> = {}>(args?: Subset<T, users$answersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findMany"> | Null>
    vote_up<T extends users$vote_upArgs<ExtArgs> = {}>(args?: Subset<T, users$vote_upArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "findMany"> | Null>
    vote_down<T extends users$vote_downArgs<ExtArgs> = {}>(args?: Subset<T, users$vote_downArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly username: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly full_name: FieldRef<"users", 'String'>
    readonly profile_url: FieldRef<"users", 'String'>
    readonly nidn_or_nim: FieldRef<"users", 'String'>
    readonly nama_perguruan_tinggi: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly create_at: FieldRef<"users", 'DateTime'>
    readonly update_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }

  /**
   * users.posts
   */
  export type users$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    where?: postsWhereInput
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    cursor?: postsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * users.posts_like
   */
  export type users$posts_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    where?: posts_likeWhereInput
    orderBy?: posts_likeOrderByWithRelationInput | posts_likeOrderByWithRelationInput[]
    cursor?: posts_likeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Posts_likeScalarFieldEnum | Posts_likeScalarFieldEnum[]
  }

  /**
   * users.answers
   */
  export type users$answersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    where?: answersWhereInput
    orderBy?: answersOrderByWithRelationInput | answersOrderByWithRelationInput[]
    cursor?: answersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnswersScalarFieldEnum | AnswersScalarFieldEnum[]
  }

  /**
   * users.vote_up
   */
  export type users$vote_upArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    where?: vote_upWhereInput
    orderBy?: vote_upOrderByWithRelationInput | vote_upOrderByWithRelationInput[]
    cursor?: vote_upWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Vote_upScalarFieldEnum | Vote_upScalarFieldEnum[]
  }

  /**
   * users.vote_down
   */
  export type users$vote_downArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    where?: vote_downWhereInput
    orderBy?: vote_downOrderByWithRelationInput | vote_downOrderByWithRelationInput[]
    cursor?: vote_downWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Vote_downScalarFieldEnum | Vote_downScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model posts
   */

  export type AggregatePosts = {
    _count: PostsCountAggregateOutputType | null
    _avg: PostsAvgAggregateOutputType | null
    _sum: PostsSumAggregateOutputType | null
    _min: PostsMinAggregateOutputType | null
    _max: PostsMaxAggregateOutputType | null
  }

  export type PostsAvgAggregateOutputType = {
    count_answers: number | null
    count_like: number | null
  }

  export type PostsSumAggregateOutputType = {
    count_answers: number | null
    count_like: number | null
  }

  export type PostsMinAggregateOutputType = {
    id: string | null
    img_url: string | null
    content: string | null
    users_id: string | null
    count_answers: number | null
    count_like: number | null
    create_at: Date | null
    update_at: Date | null
  }

  export type PostsMaxAggregateOutputType = {
    id: string | null
    img_url: string | null
    content: string | null
    users_id: string | null
    count_answers: number | null
    count_like: number | null
    create_at: Date | null
    update_at: Date | null
  }

  export type PostsCountAggregateOutputType = {
    id: number
    img_url: number
    content: number
    users_id: number
    count_answers: number
    count_like: number
    create_at: number
    update_at: number
    _all: number
  }


  export type PostsAvgAggregateInputType = {
    count_answers?: true
    count_like?: true
  }

  export type PostsSumAggregateInputType = {
    count_answers?: true
    count_like?: true
  }

  export type PostsMinAggregateInputType = {
    id?: true
    img_url?: true
    content?: true
    users_id?: true
    count_answers?: true
    count_like?: true
    create_at?: true
    update_at?: true
  }

  export type PostsMaxAggregateInputType = {
    id?: true
    img_url?: true
    content?: true
    users_id?: true
    count_answers?: true
    count_like?: true
    create_at?: true
    update_at?: true
  }

  export type PostsCountAggregateInputType = {
    id?: true
    img_url?: true
    content?: true
    users_id?: true
    count_answers?: true
    count_like?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type PostsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to aggregate.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned posts
    **/
    _count?: true | PostsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostsMaxAggregateInputType
  }

  export type GetPostsAggregateType<T extends PostsAggregateArgs> = {
        [P in keyof T & keyof AggregatePosts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePosts[P]>
      : GetScalarType<T[P], AggregatePosts[P]>
  }




  export type postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: postsWhereInput
    orderBy?: postsOrderByWithAggregationInput | postsOrderByWithAggregationInput[]
    by: PostsScalarFieldEnum[] | PostsScalarFieldEnum
    having?: postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostsCountAggregateInputType | true
    _avg?: PostsAvgAggregateInputType
    _sum?: PostsSumAggregateInputType
    _min?: PostsMinAggregateInputType
    _max?: PostsMaxAggregateInputType
  }

  export type PostsGroupByOutputType = {
    id: string
    img_url: string | null
    content: string | null
    users_id: string
    count_answers: number | null
    count_like: number | null
    create_at: Date
    update_at: Date
    _count: PostsCountAggregateOutputType | null
    _avg: PostsAvgAggregateOutputType | null
    _sum: PostsSumAggregateOutputType | null
    _min: PostsMinAggregateOutputType | null
    _max: PostsMaxAggregateOutputType | null
  }

  type GetPostsGroupByPayload<T extends postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostsGroupByOutputType[P]>
            : GetScalarType<T[P], PostsGroupByOutputType[P]>
        }
      >
    >


  export type postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    img_url?: boolean
    content?: boolean
    users_id?: boolean
    count_answers?: boolean
    count_like?: boolean
    create_at?: boolean
    update_at?: boolean
    user?: boolean | usersDefaultArgs<ExtArgs>
    posts_like?: boolean | posts$posts_likeArgs<ExtArgs>
    answers?: boolean | posts$answersArgs<ExtArgs>
    _count?: boolean | PostsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["posts"]>


  export type postsSelectScalar = {
    id?: boolean
    img_url?: boolean
    content?: boolean
    users_id?: boolean
    count_answers?: boolean
    count_like?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type postsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | usersDefaultArgs<ExtArgs>
    posts_like?: boolean | posts$posts_likeArgs<ExtArgs>
    answers?: boolean | posts$answersArgs<ExtArgs>
    _count?: boolean | PostsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "posts"
    objects: {
      user: Prisma.$usersPayload<ExtArgs>
      posts_like: Prisma.$posts_likePayload<ExtArgs>[]
      answers: Prisma.$answersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      img_url: string | null
      content: string | null
      users_id: string
      count_answers: number | null
      count_like: number | null
      create_at: Date
      update_at: Date
    }, ExtArgs["result"]["posts"]>
    composites: {}
  }

  type postsGetPayload<S extends boolean | null | undefined | postsDefaultArgs> = $Result.GetResult<Prisma.$postsPayload, S>

  type postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<postsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PostsCountAggregateInputType | true
    }

  export interface postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['posts'], meta: { name: 'posts' } }
    /**
     * Find zero or one Posts that matches the filter.
     * @param {postsFindUniqueArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends postsFindUniqueArgs>(args: SelectSubset<T, postsFindUniqueArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Posts that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {postsFindUniqueOrThrowArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends postsFindUniqueOrThrowArgs>(args: SelectSubset<T, postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindFirstArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends postsFindFirstArgs>(args?: SelectSubset<T, postsFindFirstArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindFirstOrThrowArgs} args - Arguments to find a Posts
     * @example
     * // Get one Posts
     * const posts = await prisma.posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends postsFindFirstOrThrowArgs>(args?: SelectSubset<T, postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.posts.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.posts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postsWithIdOnly = await prisma.posts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends postsFindManyArgs>(args?: SelectSubset<T, postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Posts.
     * @param {postsCreateArgs} args - Arguments to create a Posts.
     * @example
     * // Create one Posts
     * const Posts = await prisma.posts.create({
     *   data: {
     *     // ... data to create a Posts
     *   }
     * })
     * 
     */
    create<T extends postsCreateArgs>(args: SelectSubset<T, postsCreateArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Posts.
     * @param {postsCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const posts = await prisma.posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends postsCreateManyArgs>(args?: SelectSubset<T, postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Posts.
     * @param {postsDeleteArgs} args - Arguments to delete one Posts.
     * @example
     * // Delete one Posts
     * const Posts = await prisma.posts.delete({
     *   where: {
     *     // ... filter to delete one Posts
     *   }
     * })
     * 
     */
    delete<T extends postsDeleteArgs>(args: SelectSubset<T, postsDeleteArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Posts.
     * @param {postsUpdateArgs} args - Arguments to update one Posts.
     * @example
     * // Update one Posts
     * const posts = await prisma.posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends postsUpdateArgs>(args: SelectSubset<T, postsUpdateArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Posts.
     * @param {postsDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends postsDeleteManyArgs>(args?: SelectSubset<T, postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const posts = await prisma.posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends postsUpdateManyArgs>(args: SelectSubset<T, postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Posts.
     * @param {postsUpsertArgs} args - Arguments to update or create a Posts.
     * @example
     * // Update or create a Posts
     * const posts = await prisma.posts.upsert({
     *   create: {
     *     // ... data to create a Posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Posts we want to update
     *   }
     * })
     */
    upsert<T extends postsUpsertArgs>(args: SelectSubset<T, postsUpsertArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.posts.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends postsCountArgs>(
      args?: Subset<T, postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostsAggregateArgs>(args: Subset<T, PostsAggregateArgs>): Prisma.PrismaPromise<GetPostsAggregateType<T>>

    /**
     * Group by Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: postsGroupByArgs['orderBy'] }
        : { orderBy?: postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the posts model
   */
  readonly fields: postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    posts_like<T extends posts$posts_likeArgs<ExtArgs> = {}>(args?: Subset<T, posts$posts_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "findMany"> | Null>
    answers<T extends posts$answersArgs<ExtArgs> = {}>(args?: Subset<T, posts$answersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the posts model
   */ 
  interface postsFieldRefs {
    readonly id: FieldRef<"posts", 'String'>
    readonly img_url: FieldRef<"posts", 'String'>
    readonly content: FieldRef<"posts", 'String'>
    readonly users_id: FieldRef<"posts", 'String'>
    readonly count_answers: FieldRef<"posts", 'Int'>
    readonly count_like: FieldRef<"posts", 'Int'>
    readonly create_at: FieldRef<"posts", 'DateTime'>
    readonly update_at: FieldRef<"posts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * posts findUnique
   */
  export type postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts findUniqueOrThrow
   */
  export type postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts findFirst
   */
  export type postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts findFirstOrThrow
   */
  export type postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts.
     */
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts findMany
   */
  export type postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter, which posts to fetch.
     */
    where?: postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts to fetch.
     */
    orderBy?: postsOrderByWithRelationInput | postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing posts.
     */
    cursor?: postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts.
     */
    skip?: number
    distinct?: PostsScalarFieldEnum | PostsScalarFieldEnum[]
  }

  /**
   * posts create
   */
  export type postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The data needed to create a posts.
     */
    data: XOR<postsCreateInput, postsUncheckedCreateInput>
  }

  /**
   * posts createMany
   */
  export type postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many posts.
     */
    data: postsCreateManyInput | postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * posts update
   */
  export type postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The data needed to update a posts.
     */
    data: XOR<postsUpdateInput, postsUncheckedUpdateInput>
    /**
     * Choose, which posts to update.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts updateMany
   */
  export type postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update posts.
     */
    data: XOR<postsUpdateManyMutationInput, postsUncheckedUpdateManyInput>
    /**
     * Filter which posts to update
     */
    where?: postsWhereInput
  }

  /**
   * posts upsert
   */
  export type postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * The filter to search for the posts to update in case it exists.
     */
    where: postsWhereUniqueInput
    /**
     * In case the posts found by the `where` argument doesn't exist, create a new posts with this data.
     */
    create: XOR<postsCreateInput, postsUncheckedCreateInput>
    /**
     * In case the posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<postsUpdateInput, postsUncheckedUpdateInput>
  }

  /**
   * posts delete
   */
  export type postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
    /**
     * Filter which posts to delete.
     */
    where: postsWhereUniqueInput
  }

  /**
   * posts deleteMany
   */
  export type postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts to delete
     */
    where?: postsWhereInput
  }

  /**
   * posts.posts_like
   */
  export type posts$posts_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    where?: posts_likeWhereInput
    orderBy?: posts_likeOrderByWithRelationInput | posts_likeOrderByWithRelationInput[]
    cursor?: posts_likeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Posts_likeScalarFieldEnum | Posts_likeScalarFieldEnum[]
  }

  /**
   * posts.answers
   */
  export type posts$answersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    where?: answersWhereInput
    orderBy?: answersOrderByWithRelationInput | answersOrderByWithRelationInput[]
    cursor?: answersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnswersScalarFieldEnum | AnswersScalarFieldEnum[]
  }

  /**
   * posts without action
   */
  export type postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts
     */
    select?: postsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: postsInclude<ExtArgs> | null
  }


  /**
   * Model posts_like
   */

  export type AggregatePosts_like = {
    _count: Posts_likeCountAggregateOutputType | null
    _min: Posts_likeMinAggregateOutputType | null
    _max: Posts_likeMaxAggregateOutputType | null
  }

  export type Posts_likeMinAggregateOutputType = {
    id: string | null
    posts_id: string | null
    users_id: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type Posts_likeMaxAggregateOutputType = {
    id: string | null
    posts_id: string | null
    users_id: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type Posts_likeCountAggregateOutputType = {
    id: number
    posts_id: number
    users_id: number
    create_at: number
    update_at: number
    _all: number
  }


  export type Posts_likeMinAggregateInputType = {
    id?: true
    posts_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
  }

  export type Posts_likeMaxAggregateInputType = {
    id?: true
    posts_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
  }

  export type Posts_likeCountAggregateInputType = {
    id?: true
    posts_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type Posts_likeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts_like to aggregate.
     */
    where?: posts_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts_likes to fetch.
     */
    orderBy?: posts_likeOrderByWithRelationInput | posts_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: posts_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned posts_likes
    **/
    _count?: true | Posts_likeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Posts_likeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Posts_likeMaxAggregateInputType
  }

  export type GetPosts_likeAggregateType<T extends Posts_likeAggregateArgs> = {
        [P in keyof T & keyof AggregatePosts_like]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePosts_like[P]>
      : GetScalarType<T[P], AggregatePosts_like[P]>
  }




  export type posts_likeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: posts_likeWhereInput
    orderBy?: posts_likeOrderByWithAggregationInput | posts_likeOrderByWithAggregationInput[]
    by: Posts_likeScalarFieldEnum[] | Posts_likeScalarFieldEnum
    having?: posts_likeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Posts_likeCountAggregateInputType | true
    _min?: Posts_likeMinAggregateInputType
    _max?: Posts_likeMaxAggregateInputType
  }

  export type Posts_likeGroupByOutputType = {
    id: string
    posts_id: string
    users_id: string
    create_at: Date
    update_at: Date
    _count: Posts_likeCountAggregateOutputType | null
    _min: Posts_likeMinAggregateOutputType | null
    _max: Posts_likeMaxAggregateOutputType | null
  }

  type GetPosts_likeGroupByPayload<T extends posts_likeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Posts_likeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Posts_likeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Posts_likeGroupByOutputType[P]>
            : GetScalarType<T[P], Posts_likeGroupByOutputType[P]>
        }
      >
    >


  export type posts_likeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    posts_id?: boolean
    users_id?: boolean
    create_at?: boolean
    update_at?: boolean
    post?: boolean | postsDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["posts_like"]>


  export type posts_likeSelectScalar = {
    id?: boolean
    posts_id?: boolean
    users_id?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type posts_likeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | postsDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $posts_likePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "posts_like"
    objects: {
      post: Prisma.$postsPayload<ExtArgs>
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      posts_id: string
      users_id: string
      create_at: Date
      update_at: Date
    }, ExtArgs["result"]["posts_like"]>
    composites: {}
  }

  type posts_likeGetPayload<S extends boolean | null | undefined | posts_likeDefaultArgs> = $Result.GetResult<Prisma.$posts_likePayload, S>

  type posts_likeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<posts_likeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Posts_likeCountAggregateInputType | true
    }

  export interface posts_likeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['posts_like'], meta: { name: 'posts_like' } }
    /**
     * Find zero or one Posts_like that matches the filter.
     * @param {posts_likeFindUniqueArgs} args - Arguments to find a Posts_like
     * @example
     * // Get one Posts_like
     * const posts_like = await prisma.posts_like.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends posts_likeFindUniqueArgs>(args: SelectSubset<T, posts_likeFindUniqueArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Posts_like that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {posts_likeFindUniqueOrThrowArgs} args - Arguments to find a Posts_like
     * @example
     * // Get one Posts_like
     * const posts_like = await prisma.posts_like.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends posts_likeFindUniqueOrThrowArgs>(args: SelectSubset<T, posts_likeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Posts_like that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {posts_likeFindFirstArgs} args - Arguments to find a Posts_like
     * @example
     * // Get one Posts_like
     * const posts_like = await prisma.posts_like.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends posts_likeFindFirstArgs>(args?: SelectSubset<T, posts_likeFindFirstArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Posts_like that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {posts_likeFindFirstOrThrowArgs} args - Arguments to find a Posts_like
     * @example
     * // Get one Posts_like
     * const posts_like = await prisma.posts_like.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends posts_likeFindFirstOrThrowArgs>(args?: SelectSubset<T, posts_likeFindFirstOrThrowArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Posts_likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {posts_likeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts_likes
     * const posts_likes = await prisma.posts_like.findMany()
     * 
     * // Get first 10 Posts_likes
     * const posts_likes = await prisma.posts_like.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const posts_likeWithIdOnly = await prisma.posts_like.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends posts_likeFindManyArgs>(args?: SelectSubset<T, posts_likeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Posts_like.
     * @param {posts_likeCreateArgs} args - Arguments to create a Posts_like.
     * @example
     * // Create one Posts_like
     * const Posts_like = await prisma.posts_like.create({
     *   data: {
     *     // ... data to create a Posts_like
     *   }
     * })
     * 
     */
    create<T extends posts_likeCreateArgs>(args: SelectSubset<T, posts_likeCreateArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Posts_likes.
     * @param {posts_likeCreateManyArgs} args - Arguments to create many Posts_likes.
     * @example
     * // Create many Posts_likes
     * const posts_like = await prisma.posts_like.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends posts_likeCreateManyArgs>(args?: SelectSubset<T, posts_likeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Posts_like.
     * @param {posts_likeDeleteArgs} args - Arguments to delete one Posts_like.
     * @example
     * // Delete one Posts_like
     * const Posts_like = await prisma.posts_like.delete({
     *   where: {
     *     // ... filter to delete one Posts_like
     *   }
     * })
     * 
     */
    delete<T extends posts_likeDeleteArgs>(args: SelectSubset<T, posts_likeDeleteArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Posts_like.
     * @param {posts_likeUpdateArgs} args - Arguments to update one Posts_like.
     * @example
     * // Update one Posts_like
     * const posts_like = await prisma.posts_like.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends posts_likeUpdateArgs>(args: SelectSubset<T, posts_likeUpdateArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Posts_likes.
     * @param {posts_likeDeleteManyArgs} args - Arguments to filter Posts_likes to delete.
     * @example
     * // Delete a few Posts_likes
     * const { count } = await prisma.posts_like.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends posts_likeDeleteManyArgs>(args?: SelectSubset<T, posts_likeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {posts_likeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts_likes
     * const posts_like = await prisma.posts_like.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends posts_likeUpdateManyArgs>(args: SelectSubset<T, posts_likeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Posts_like.
     * @param {posts_likeUpsertArgs} args - Arguments to update or create a Posts_like.
     * @example
     * // Update or create a Posts_like
     * const posts_like = await prisma.posts_like.upsert({
     *   create: {
     *     // ... data to create a Posts_like
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Posts_like we want to update
     *   }
     * })
     */
    upsert<T extends posts_likeUpsertArgs>(args: SelectSubset<T, posts_likeUpsertArgs<ExtArgs>>): Prisma__posts_likeClient<$Result.GetResult<Prisma.$posts_likePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Posts_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {posts_likeCountArgs} args - Arguments to filter Posts_likes to count.
     * @example
     * // Count the number of Posts_likes
     * const count = await prisma.posts_like.count({
     *   where: {
     *     // ... the filter for the Posts_likes we want to count
     *   }
     * })
    **/
    count<T extends posts_likeCountArgs>(
      args?: Subset<T, posts_likeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Posts_likeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Posts_like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Posts_likeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Posts_likeAggregateArgs>(args: Subset<T, Posts_likeAggregateArgs>): Prisma.PrismaPromise<GetPosts_likeAggregateType<T>>

    /**
     * Group by Posts_like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {posts_likeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends posts_likeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: posts_likeGroupByArgs['orderBy'] }
        : { orderBy?: posts_likeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, posts_likeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPosts_likeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the posts_like model
   */
  readonly fields: posts_likeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for posts_like.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__posts_likeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postsDefaultArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the posts_like model
   */ 
  interface posts_likeFieldRefs {
    readonly id: FieldRef<"posts_like", 'String'>
    readonly posts_id: FieldRef<"posts_like", 'String'>
    readonly users_id: FieldRef<"posts_like", 'String'>
    readonly create_at: FieldRef<"posts_like", 'DateTime'>
    readonly update_at: FieldRef<"posts_like", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * posts_like findUnique
   */
  export type posts_likeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * Filter, which posts_like to fetch.
     */
    where: posts_likeWhereUniqueInput
  }

  /**
   * posts_like findUniqueOrThrow
   */
  export type posts_likeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * Filter, which posts_like to fetch.
     */
    where: posts_likeWhereUniqueInput
  }

  /**
   * posts_like findFirst
   */
  export type posts_likeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * Filter, which posts_like to fetch.
     */
    where?: posts_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts_likes to fetch.
     */
    orderBy?: posts_likeOrderByWithRelationInput | posts_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts_likes.
     */
    cursor?: posts_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts_likes.
     */
    distinct?: Posts_likeScalarFieldEnum | Posts_likeScalarFieldEnum[]
  }

  /**
   * posts_like findFirstOrThrow
   */
  export type posts_likeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * Filter, which posts_like to fetch.
     */
    where?: posts_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts_likes to fetch.
     */
    orderBy?: posts_likeOrderByWithRelationInput | posts_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for posts_likes.
     */
    cursor?: posts_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of posts_likes.
     */
    distinct?: Posts_likeScalarFieldEnum | Posts_likeScalarFieldEnum[]
  }

  /**
   * posts_like findMany
   */
  export type posts_likeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * Filter, which posts_likes to fetch.
     */
    where?: posts_likeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of posts_likes to fetch.
     */
    orderBy?: posts_likeOrderByWithRelationInput | posts_likeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing posts_likes.
     */
    cursor?: posts_likeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` posts_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` posts_likes.
     */
    skip?: number
    distinct?: Posts_likeScalarFieldEnum | Posts_likeScalarFieldEnum[]
  }

  /**
   * posts_like create
   */
  export type posts_likeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * The data needed to create a posts_like.
     */
    data: XOR<posts_likeCreateInput, posts_likeUncheckedCreateInput>
  }

  /**
   * posts_like createMany
   */
  export type posts_likeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many posts_likes.
     */
    data: posts_likeCreateManyInput | posts_likeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * posts_like update
   */
  export type posts_likeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * The data needed to update a posts_like.
     */
    data: XOR<posts_likeUpdateInput, posts_likeUncheckedUpdateInput>
    /**
     * Choose, which posts_like to update.
     */
    where: posts_likeWhereUniqueInput
  }

  /**
   * posts_like updateMany
   */
  export type posts_likeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update posts_likes.
     */
    data: XOR<posts_likeUpdateManyMutationInput, posts_likeUncheckedUpdateManyInput>
    /**
     * Filter which posts_likes to update
     */
    where?: posts_likeWhereInput
  }

  /**
   * posts_like upsert
   */
  export type posts_likeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * The filter to search for the posts_like to update in case it exists.
     */
    where: posts_likeWhereUniqueInput
    /**
     * In case the posts_like found by the `where` argument doesn't exist, create a new posts_like with this data.
     */
    create: XOR<posts_likeCreateInput, posts_likeUncheckedCreateInput>
    /**
     * In case the posts_like was found with the provided `where` argument, update it with this data.
     */
    update: XOR<posts_likeUpdateInput, posts_likeUncheckedUpdateInput>
  }

  /**
   * posts_like delete
   */
  export type posts_likeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
    /**
     * Filter which posts_like to delete.
     */
    where: posts_likeWhereUniqueInput
  }

  /**
   * posts_like deleteMany
   */
  export type posts_likeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which posts_likes to delete
     */
    where?: posts_likeWhereInput
  }

  /**
   * posts_like without action
   */
  export type posts_likeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the posts_like
     */
    select?: posts_likeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: posts_likeInclude<ExtArgs> | null
  }


  /**
   * Model answers
   */

  export type AggregateAnswers = {
    _count: AnswersCountAggregateOutputType | null
    _avg: AnswersAvgAggregateOutputType | null
    _sum: AnswersSumAggregateOutputType | null
    _min: AnswersMinAggregateOutputType | null
    _max: AnswersMaxAggregateOutputType | null
  }

  export type AnswersAvgAggregateOutputType = {
    vote_up: number | null
    vote_down: number | null
  }

  export type AnswersSumAggregateOutputType = {
    vote_up: number | null
    vote_down: number | null
  }

  export type AnswersMinAggregateOutputType = {
    id: string | null
    posts_id: string | null
    users_id: string | null
    answers: string | null
    vote_up: number | null
    vote_down: number | null
    create_at: Date | null
    update_at: Date | null
  }

  export type AnswersMaxAggregateOutputType = {
    id: string | null
    posts_id: string | null
    users_id: string | null
    answers: string | null
    vote_up: number | null
    vote_down: number | null
    create_at: Date | null
    update_at: Date | null
  }

  export type AnswersCountAggregateOutputType = {
    id: number
    posts_id: number
    users_id: number
    answers: number
    vote_up: number
    vote_down: number
    create_at: number
    update_at: number
    _all: number
  }


  export type AnswersAvgAggregateInputType = {
    vote_up?: true
    vote_down?: true
  }

  export type AnswersSumAggregateInputType = {
    vote_up?: true
    vote_down?: true
  }

  export type AnswersMinAggregateInputType = {
    id?: true
    posts_id?: true
    users_id?: true
    answers?: true
    vote_up?: true
    vote_down?: true
    create_at?: true
    update_at?: true
  }

  export type AnswersMaxAggregateInputType = {
    id?: true
    posts_id?: true
    users_id?: true
    answers?: true
    vote_up?: true
    vote_down?: true
    create_at?: true
    update_at?: true
  }

  export type AnswersCountAggregateInputType = {
    id?: true
    posts_id?: true
    users_id?: true
    answers?: true
    vote_up?: true
    vote_down?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type AnswersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which answers to aggregate.
     */
    where?: answersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of answers to fetch.
     */
    orderBy?: answersOrderByWithRelationInput | answersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: answersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` answers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` answers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned answers
    **/
    _count?: true | AnswersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnswersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnswersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnswersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnswersMaxAggregateInputType
  }

  export type GetAnswersAggregateType<T extends AnswersAggregateArgs> = {
        [P in keyof T & keyof AggregateAnswers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnswers[P]>
      : GetScalarType<T[P], AggregateAnswers[P]>
  }




  export type answersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: answersWhereInput
    orderBy?: answersOrderByWithAggregationInput | answersOrderByWithAggregationInput[]
    by: AnswersScalarFieldEnum[] | AnswersScalarFieldEnum
    having?: answersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnswersCountAggregateInputType | true
    _avg?: AnswersAvgAggregateInputType
    _sum?: AnswersSumAggregateInputType
    _min?: AnswersMinAggregateInputType
    _max?: AnswersMaxAggregateInputType
  }

  export type AnswersGroupByOutputType = {
    id: string
    posts_id: string
    users_id: string
    answers: string | null
    vote_up: number | null
    vote_down: number | null
    create_at: Date
    update_at: Date
    _count: AnswersCountAggregateOutputType | null
    _avg: AnswersAvgAggregateOutputType | null
    _sum: AnswersSumAggregateOutputType | null
    _min: AnswersMinAggregateOutputType | null
    _max: AnswersMaxAggregateOutputType | null
  }

  type GetAnswersGroupByPayload<T extends answersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnswersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnswersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnswersGroupByOutputType[P]>
            : GetScalarType<T[P], AnswersGroupByOutputType[P]>
        }
      >
    >


  export type answersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    posts_id?: boolean
    users_id?: boolean
    answers?: boolean
    vote_up?: boolean
    vote_down?: boolean
    create_at?: boolean
    update_at?: boolean
    post?: boolean | postsDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
    vote_up_relations?: boolean | answers$vote_up_relationsArgs<ExtArgs>
    vote_down_relations?: boolean | answers$vote_down_relationsArgs<ExtArgs>
    _count?: boolean | AnswersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["answers"]>


  export type answersSelectScalar = {
    id?: boolean
    posts_id?: boolean
    users_id?: boolean
    answers?: boolean
    vote_up?: boolean
    vote_down?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type answersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | postsDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
    vote_up_relations?: boolean | answers$vote_up_relationsArgs<ExtArgs>
    vote_down_relations?: boolean | answers$vote_down_relationsArgs<ExtArgs>
    _count?: boolean | AnswersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $answersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "answers"
    objects: {
      post: Prisma.$postsPayload<ExtArgs>
      user: Prisma.$usersPayload<ExtArgs>
      vote_up_relations: Prisma.$vote_upPayload<ExtArgs>[]
      vote_down_relations: Prisma.$vote_downPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      posts_id: string
      users_id: string
      answers: string | null
      vote_up: number | null
      vote_down: number | null
      create_at: Date
      update_at: Date
    }, ExtArgs["result"]["answers"]>
    composites: {}
  }

  type answersGetPayload<S extends boolean | null | undefined | answersDefaultArgs> = $Result.GetResult<Prisma.$answersPayload, S>

  type answersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<answersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AnswersCountAggregateInputType | true
    }

  export interface answersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['answers'], meta: { name: 'answers' } }
    /**
     * Find zero or one Answers that matches the filter.
     * @param {answersFindUniqueArgs} args - Arguments to find a Answers
     * @example
     * // Get one Answers
     * const answers = await prisma.answers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends answersFindUniqueArgs>(args: SelectSubset<T, answersFindUniqueArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Answers that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {answersFindUniqueOrThrowArgs} args - Arguments to find a Answers
     * @example
     * // Get one Answers
     * const answers = await prisma.answers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends answersFindUniqueOrThrowArgs>(args: SelectSubset<T, answersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Answers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {answersFindFirstArgs} args - Arguments to find a Answers
     * @example
     * // Get one Answers
     * const answers = await prisma.answers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends answersFindFirstArgs>(args?: SelectSubset<T, answersFindFirstArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Answers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {answersFindFirstOrThrowArgs} args - Arguments to find a Answers
     * @example
     * // Get one Answers
     * const answers = await prisma.answers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends answersFindFirstOrThrowArgs>(args?: SelectSubset<T, answersFindFirstOrThrowArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Answers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {answersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Answers
     * const answers = await prisma.answers.findMany()
     * 
     * // Get first 10 Answers
     * const answers = await prisma.answers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const answersWithIdOnly = await prisma.answers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends answersFindManyArgs>(args?: SelectSubset<T, answersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Answers.
     * @param {answersCreateArgs} args - Arguments to create a Answers.
     * @example
     * // Create one Answers
     * const Answers = await prisma.answers.create({
     *   data: {
     *     // ... data to create a Answers
     *   }
     * })
     * 
     */
    create<T extends answersCreateArgs>(args: SelectSubset<T, answersCreateArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Answers.
     * @param {answersCreateManyArgs} args - Arguments to create many Answers.
     * @example
     * // Create many Answers
     * const answers = await prisma.answers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends answersCreateManyArgs>(args?: SelectSubset<T, answersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Answers.
     * @param {answersDeleteArgs} args - Arguments to delete one Answers.
     * @example
     * // Delete one Answers
     * const Answers = await prisma.answers.delete({
     *   where: {
     *     // ... filter to delete one Answers
     *   }
     * })
     * 
     */
    delete<T extends answersDeleteArgs>(args: SelectSubset<T, answersDeleteArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Answers.
     * @param {answersUpdateArgs} args - Arguments to update one Answers.
     * @example
     * // Update one Answers
     * const answers = await prisma.answers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends answersUpdateArgs>(args: SelectSubset<T, answersUpdateArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Answers.
     * @param {answersDeleteManyArgs} args - Arguments to filter Answers to delete.
     * @example
     * // Delete a few Answers
     * const { count } = await prisma.answers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends answersDeleteManyArgs>(args?: SelectSubset<T, answersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Answers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {answersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Answers
     * const answers = await prisma.answers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends answersUpdateManyArgs>(args: SelectSubset<T, answersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Answers.
     * @param {answersUpsertArgs} args - Arguments to update or create a Answers.
     * @example
     * // Update or create a Answers
     * const answers = await prisma.answers.upsert({
     *   create: {
     *     // ... data to create a Answers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Answers we want to update
     *   }
     * })
     */
    upsert<T extends answersUpsertArgs>(args: SelectSubset<T, answersUpsertArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Answers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {answersCountArgs} args - Arguments to filter Answers to count.
     * @example
     * // Count the number of Answers
     * const count = await prisma.answers.count({
     *   where: {
     *     // ... the filter for the Answers we want to count
     *   }
     * })
    **/
    count<T extends answersCountArgs>(
      args?: Subset<T, answersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnswersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Answers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnswersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnswersAggregateArgs>(args: Subset<T, AnswersAggregateArgs>): Prisma.PrismaPromise<GetAnswersAggregateType<T>>

    /**
     * Group by Answers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {answersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends answersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: answersGroupByArgs['orderBy'] }
        : { orderBy?: answersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, answersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnswersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the answers model
   */
  readonly fields: answersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for answers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__answersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends postsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, postsDefaultArgs<ExtArgs>>): Prisma__postsClient<$Result.GetResult<Prisma.$postsPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    vote_up_relations<T extends answers$vote_up_relationsArgs<ExtArgs> = {}>(args?: Subset<T, answers$vote_up_relationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "findMany"> | Null>
    vote_down_relations<T extends answers$vote_down_relationsArgs<ExtArgs> = {}>(args?: Subset<T, answers$vote_down_relationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the answers model
   */ 
  interface answersFieldRefs {
    readonly id: FieldRef<"answers", 'String'>
    readonly posts_id: FieldRef<"answers", 'String'>
    readonly users_id: FieldRef<"answers", 'String'>
    readonly answers: FieldRef<"answers", 'String'>
    readonly vote_up: FieldRef<"answers", 'Int'>
    readonly vote_down: FieldRef<"answers", 'Int'>
    readonly create_at: FieldRef<"answers", 'DateTime'>
    readonly update_at: FieldRef<"answers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * answers findUnique
   */
  export type answersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * Filter, which answers to fetch.
     */
    where: answersWhereUniqueInput
  }

  /**
   * answers findUniqueOrThrow
   */
  export type answersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * Filter, which answers to fetch.
     */
    where: answersWhereUniqueInput
  }

  /**
   * answers findFirst
   */
  export type answersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * Filter, which answers to fetch.
     */
    where?: answersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of answers to fetch.
     */
    orderBy?: answersOrderByWithRelationInput | answersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for answers.
     */
    cursor?: answersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` answers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` answers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of answers.
     */
    distinct?: AnswersScalarFieldEnum | AnswersScalarFieldEnum[]
  }

  /**
   * answers findFirstOrThrow
   */
  export type answersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * Filter, which answers to fetch.
     */
    where?: answersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of answers to fetch.
     */
    orderBy?: answersOrderByWithRelationInput | answersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for answers.
     */
    cursor?: answersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` answers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` answers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of answers.
     */
    distinct?: AnswersScalarFieldEnum | AnswersScalarFieldEnum[]
  }

  /**
   * answers findMany
   */
  export type answersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * Filter, which answers to fetch.
     */
    where?: answersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of answers to fetch.
     */
    orderBy?: answersOrderByWithRelationInput | answersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing answers.
     */
    cursor?: answersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` answers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` answers.
     */
    skip?: number
    distinct?: AnswersScalarFieldEnum | AnswersScalarFieldEnum[]
  }

  /**
   * answers create
   */
  export type answersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * The data needed to create a answers.
     */
    data: XOR<answersCreateInput, answersUncheckedCreateInput>
  }

  /**
   * answers createMany
   */
  export type answersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many answers.
     */
    data: answersCreateManyInput | answersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * answers update
   */
  export type answersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * The data needed to update a answers.
     */
    data: XOR<answersUpdateInput, answersUncheckedUpdateInput>
    /**
     * Choose, which answers to update.
     */
    where: answersWhereUniqueInput
  }

  /**
   * answers updateMany
   */
  export type answersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update answers.
     */
    data: XOR<answersUpdateManyMutationInput, answersUncheckedUpdateManyInput>
    /**
     * Filter which answers to update
     */
    where?: answersWhereInput
  }

  /**
   * answers upsert
   */
  export type answersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * The filter to search for the answers to update in case it exists.
     */
    where: answersWhereUniqueInput
    /**
     * In case the answers found by the `where` argument doesn't exist, create a new answers with this data.
     */
    create: XOR<answersCreateInput, answersUncheckedCreateInput>
    /**
     * In case the answers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<answersUpdateInput, answersUncheckedUpdateInput>
  }

  /**
   * answers delete
   */
  export type answersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
    /**
     * Filter which answers to delete.
     */
    where: answersWhereUniqueInput
  }

  /**
   * answers deleteMany
   */
  export type answersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which answers to delete
     */
    where?: answersWhereInput
  }

  /**
   * answers.vote_up_relations
   */
  export type answers$vote_up_relationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    where?: vote_upWhereInput
    orderBy?: vote_upOrderByWithRelationInput | vote_upOrderByWithRelationInput[]
    cursor?: vote_upWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Vote_upScalarFieldEnum | Vote_upScalarFieldEnum[]
  }

  /**
   * answers.vote_down_relations
   */
  export type answers$vote_down_relationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    where?: vote_downWhereInput
    orderBy?: vote_downOrderByWithRelationInput | vote_downOrderByWithRelationInput[]
    cursor?: vote_downWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Vote_downScalarFieldEnum | Vote_downScalarFieldEnum[]
  }

  /**
   * answers without action
   */
  export type answersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the answers
     */
    select?: answersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: answersInclude<ExtArgs> | null
  }


  /**
   * Model vote_up
   */

  export type AggregateVote_up = {
    _count: Vote_upCountAggregateOutputType | null
    _min: Vote_upMinAggregateOutputType | null
    _max: Vote_upMaxAggregateOutputType | null
  }

  export type Vote_upMinAggregateOutputType = {
    id: string | null
    answers_id: string | null
    users_id: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type Vote_upMaxAggregateOutputType = {
    id: string | null
    answers_id: string | null
    users_id: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type Vote_upCountAggregateOutputType = {
    id: number
    answers_id: number
    users_id: number
    create_at: number
    update_at: number
    _all: number
  }


  export type Vote_upMinAggregateInputType = {
    id?: true
    answers_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
  }

  export type Vote_upMaxAggregateInputType = {
    id?: true
    answers_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
  }

  export type Vote_upCountAggregateInputType = {
    id?: true
    answers_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type Vote_upAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vote_up to aggregate.
     */
    where?: vote_upWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_ups to fetch.
     */
    orderBy?: vote_upOrderByWithRelationInput | vote_upOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: vote_upWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_ups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned vote_ups
    **/
    _count?: true | Vote_upCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Vote_upMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Vote_upMaxAggregateInputType
  }

  export type GetVote_upAggregateType<T extends Vote_upAggregateArgs> = {
        [P in keyof T & keyof AggregateVote_up]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVote_up[P]>
      : GetScalarType<T[P], AggregateVote_up[P]>
  }




  export type vote_upGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vote_upWhereInput
    orderBy?: vote_upOrderByWithAggregationInput | vote_upOrderByWithAggregationInput[]
    by: Vote_upScalarFieldEnum[] | Vote_upScalarFieldEnum
    having?: vote_upScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Vote_upCountAggregateInputType | true
    _min?: Vote_upMinAggregateInputType
    _max?: Vote_upMaxAggregateInputType
  }

  export type Vote_upGroupByOutputType = {
    id: string
    answers_id: string
    users_id: string
    create_at: Date
    update_at: Date
    _count: Vote_upCountAggregateOutputType | null
    _min: Vote_upMinAggregateOutputType | null
    _max: Vote_upMaxAggregateOutputType | null
  }

  type GetVote_upGroupByPayload<T extends vote_upGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Vote_upGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Vote_upGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Vote_upGroupByOutputType[P]>
            : GetScalarType<T[P], Vote_upGroupByOutputType[P]>
        }
      >
    >


  export type vote_upSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    answers_id?: boolean
    users_id?: boolean
    create_at?: boolean
    update_at?: boolean
    answer?: boolean | answersDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vote_up"]>


  export type vote_upSelectScalar = {
    id?: boolean
    answers_id?: boolean
    users_id?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type vote_upInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    answer?: boolean | answersDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $vote_upPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "vote_up"
    objects: {
      answer: Prisma.$answersPayload<ExtArgs>
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      answers_id: string
      users_id: string
      create_at: Date
      update_at: Date
    }, ExtArgs["result"]["vote_up"]>
    composites: {}
  }

  type vote_upGetPayload<S extends boolean | null | undefined | vote_upDefaultArgs> = $Result.GetResult<Prisma.$vote_upPayload, S>

  type vote_upCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<vote_upFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Vote_upCountAggregateInputType | true
    }

  export interface vote_upDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['vote_up'], meta: { name: 'vote_up' } }
    /**
     * Find zero or one Vote_up that matches the filter.
     * @param {vote_upFindUniqueArgs} args - Arguments to find a Vote_up
     * @example
     * // Get one Vote_up
     * const vote_up = await prisma.vote_up.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends vote_upFindUniqueArgs>(args: SelectSubset<T, vote_upFindUniqueArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Vote_up that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {vote_upFindUniqueOrThrowArgs} args - Arguments to find a Vote_up
     * @example
     * // Get one Vote_up
     * const vote_up = await prisma.vote_up.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends vote_upFindUniqueOrThrowArgs>(args: SelectSubset<T, vote_upFindUniqueOrThrowArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Vote_up that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_upFindFirstArgs} args - Arguments to find a Vote_up
     * @example
     * // Get one Vote_up
     * const vote_up = await prisma.vote_up.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends vote_upFindFirstArgs>(args?: SelectSubset<T, vote_upFindFirstArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Vote_up that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_upFindFirstOrThrowArgs} args - Arguments to find a Vote_up
     * @example
     * // Get one Vote_up
     * const vote_up = await prisma.vote_up.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends vote_upFindFirstOrThrowArgs>(args?: SelectSubset<T, vote_upFindFirstOrThrowArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Vote_ups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_upFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vote_ups
     * const vote_ups = await prisma.vote_up.findMany()
     * 
     * // Get first 10 Vote_ups
     * const vote_ups = await prisma.vote_up.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vote_upWithIdOnly = await prisma.vote_up.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends vote_upFindManyArgs>(args?: SelectSubset<T, vote_upFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Vote_up.
     * @param {vote_upCreateArgs} args - Arguments to create a Vote_up.
     * @example
     * // Create one Vote_up
     * const Vote_up = await prisma.vote_up.create({
     *   data: {
     *     // ... data to create a Vote_up
     *   }
     * })
     * 
     */
    create<T extends vote_upCreateArgs>(args: SelectSubset<T, vote_upCreateArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Vote_ups.
     * @param {vote_upCreateManyArgs} args - Arguments to create many Vote_ups.
     * @example
     * // Create many Vote_ups
     * const vote_up = await prisma.vote_up.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends vote_upCreateManyArgs>(args?: SelectSubset<T, vote_upCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Vote_up.
     * @param {vote_upDeleteArgs} args - Arguments to delete one Vote_up.
     * @example
     * // Delete one Vote_up
     * const Vote_up = await prisma.vote_up.delete({
     *   where: {
     *     // ... filter to delete one Vote_up
     *   }
     * })
     * 
     */
    delete<T extends vote_upDeleteArgs>(args: SelectSubset<T, vote_upDeleteArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Vote_up.
     * @param {vote_upUpdateArgs} args - Arguments to update one Vote_up.
     * @example
     * // Update one Vote_up
     * const vote_up = await prisma.vote_up.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends vote_upUpdateArgs>(args: SelectSubset<T, vote_upUpdateArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Vote_ups.
     * @param {vote_upDeleteManyArgs} args - Arguments to filter Vote_ups to delete.
     * @example
     * // Delete a few Vote_ups
     * const { count } = await prisma.vote_up.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends vote_upDeleteManyArgs>(args?: SelectSubset<T, vote_upDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vote_ups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_upUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vote_ups
     * const vote_up = await prisma.vote_up.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends vote_upUpdateManyArgs>(args: SelectSubset<T, vote_upUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Vote_up.
     * @param {vote_upUpsertArgs} args - Arguments to update or create a Vote_up.
     * @example
     * // Update or create a Vote_up
     * const vote_up = await prisma.vote_up.upsert({
     *   create: {
     *     // ... data to create a Vote_up
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vote_up we want to update
     *   }
     * })
     */
    upsert<T extends vote_upUpsertArgs>(args: SelectSubset<T, vote_upUpsertArgs<ExtArgs>>): Prisma__vote_upClient<$Result.GetResult<Prisma.$vote_upPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Vote_ups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_upCountArgs} args - Arguments to filter Vote_ups to count.
     * @example
     * // Count the number of Vote_ups
     * const count = await prisma.vote_up.count({
     *   where: {
     *     // ... the filter for the Vote_ups we want to count
     *   }
     * })
    **/
    count<T extends vote_upCountArgs>(
      args?: Subset<T, vote_upCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Vote_upCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vote_up.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vote_upAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Vote_upAggregateArgs>(args: Subset<T, Vote_upAggregateArgs>): Prisma.PrismaPromise<GetVote_upAggregateType<T>>

    /**
     * Group by Vote_up.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_upGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends vote_upGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: vote_upGroupByArgs['orderBy'] }
        : { orderBy?: vote_upGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, vote_upGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVote_upGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the vote_up model
   */
  readonly fields: vote_upFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for vote_up.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__vote_upClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    answer<T extends answersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, answersDefaultArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the vote_up model
   */ 
  interface vote_upFieldRefs {
    readonly id: FieldRef<"vote_up", 'String'>
    readonly answers_id: FieldRef<"vote_up", 'String'>
    readonly users_id: FieldRef<"vote_up", 'String'>
    readonly create_at: FieldRef<"vote_up", 'DateTime'>
    readonly update_at: FieldRef<"vote_up", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * vote_up findUnique
   */
  export type vote_upFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * Filter, which vote_up to fetch.
     */
    where: vote_upWhereUniqueInput
  }

  /**
   * vote_up findUniqueOrThrow
   */
  export type vote_upFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * Filter, which vote_up to fetch.
     */
    where: vote_upWhereUniqueInput
  }

  /**
   * vote_up findFirst
   */
  export type vote_upFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * Filter, which vote_up to fetch.
     */
    where?: vote_upWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_ups to fetch.
     */
    orderBy?: vote_upOrderByWithRelationInput | vote_upOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vote_ups.
     */
    cursor?: vote_upWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_ups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vote_ups.
     */
    distinct?: Vote_upScalarFieldEnum | Vote_upScalarFieldEnum[]
  }

  /**
   * vote_up findFirstOrThrow
   */
  export type vote_upFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * Filter, which vote_up to fetch.
     */
    where?: vote_upWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_ups to fetch.
     */
    orderBy?: vote_upOrderByWithRelationInput | vote_upOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vote_ups.
     */
    cursor?: vote_upWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_ups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vote_ups.
     */
    distinct?: Vote_upScalarFieldEnum | Vote_upScalarFieldEnum[]
  }

  /**
   * vote_up findMany
   */
  export type vote_upFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * Filter, which vote_ups to fetch.
     */
    where?: vote_upWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_ups to fetch.
     */
    orderBy?: vote_upOrderByWithRelationInput | vote_upOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing vote_ups.
     */
    cursor?: vote_upWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_ups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_ups.
     */
    skip?: number
    distinct?: Vote_upScalarFieldEnum | Vote_upScalarFieldEnum[]
  }

  /**
   * vote_up create
   */
  export type vote_upCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * The data needed to create a vote_up.
     */
    data: XOR<vote_upCreateInput, vote_upUncheckedCreateInput>
  }

  /**
   * vote_up createMany
   */
  export type vote_upCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many vote_ups.
     */
    data: vote_upCreateManyInput | vote_upCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * vote_up update
   */
  export type vote_upUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * The data needed to update a vote_up.
     */
    data: XOR<vote_upUpdateInput, vote_upUncheckedUpdateInput>
    /**
     * Choose, which vote_up to update.
     */
    where: vote_upWhereUniqueInput
  }

  /**
   * vote_up updateMany
   */
  export type vote_upUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update vote_ups.
     */
    data: XOR<vote_upUpdateManyMutationInput, vote_upUncheckedUpdateManyInput>
    /**
     * Filter which vote_ups to update
     */
    where?: vote_upWhereInput
  }

  /**
   * vote_up upsert
   */
  export type vote_upUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * The filter to search for the vote_up to update in case it exists.
     */
    where: vote_upWhereUniqueInput
    /**
     * In case the vote_up found by the `where` argument doesn't exist, create a new vote_up with this data.
     */
    create: XOR<vote_upCreateInput, vote_upUncheckedCreateInput>
    /**
     * In case the vote_up was found with the provided `where` argument, update it with this data.
     */
    update: XOR<vote_upUpdateInput, vote_upUncheckedUpdateInput>
  }

  /**
   * vote_up delete
   */
  export type vote_upDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
    /**
     * Filter which vote_up to delete.
     */
    where: vote_upWhereUniqueInput
  }

  /**
   * vote_up deleteMany
   */
  export type vote_upDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vote_ups to delete
     */
    where?: vote_upWhereInput
  }

  /**
   * vote_up without action
   */
  export type vote_upDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_up
     */
    select?: vote_upSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_upInclude<ExtArgs> | null
  }


  /**
   * Model vote_down
   */

  export type AggregateVote_down = {
    _count: Vote_downCountAggregateOutputType | null
    _min: Vote_downMinAggregateOutputType | null
    _max: Vote_downMaxAggregateOutputType | null
  }

  export type Vote_downMinAggregateOutputType = {
    id: string | null
    answers_id: string | null
    users_id: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type Vote_downMaxAggregateOutputType = {
    id: string | null
    answers_id: string | null
    users_id: string | null
    create_at: Date | null
    update_at: Date | null
  }

  export type Vote_downCountAggregateOutputType = {
    id: number
    answers_id: number
    users_id: number
    create_at: number
    update_at: number
    _all: number
  }


  export type Vote_downMinAggregateInputType = {
    id?: true
    answers_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
  }

  export type Vote_downMaxAggregateInputType = {
    id?: true
    answers_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
  }

  export type Vote_downCountAggregateInputType = {
    id?: true
    answers_id?: true
    users_id?: true
    create_at?: true
    update_at?: true
    _all?: true
  }

  export type Vote_downAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vote_down to aggregate.
     */
    where?: vote_downWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_downs to fetch.
     */
    orderBy?: vote_downOrderByWithRelationInput | vote_downOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: vote_downWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_downs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_downs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned vote_downs
    **/
    _count?: true | Vote_downCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Vote_downMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Vote_downMaxAggregateInputType
  }

  export type GetVote_downAggregateType<T extends Vote_downAggregateArgs> = {
        [P in keyof T & keyof AggregateVote_down]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVote_down[P]>
      : GetScalarType<T[P], AggregateVote_down[P]>
  }




  export type vote_downGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: vote_downWhereInput
    orderBy?: vote_downOrderByWithAggregationInput | vote_downOrderByWithAggregationInput[]
    by: Vote_downScalarFieldEnum[] | Vote_downScalarFieldEnum
    having?: vote_downScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Vote_downCountAggregateInputType | true
    _min?: Vote_downMinAggregateInputType
    _max?: Vote_downMaxAggregateInputType
  }

  export type Vote_downGroupByOutputType = {
    id: string
    answers_id: string
    users_id: string
    create_at: Date
    update_at: Date
    _count: Vote_downCountAggregateOutputType | null
    _min: Vote_downMinAggregateOutputType | null
    _max: Vote_downMaxAggregateOutputType | null
  }

  type GetVote_downGroupByPayload<T extends vote_downGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Vote_downGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Vote_downGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Vote_downGroupByOutputType[P]>
            : GetScalarType<T[P], Vote_downGroupByOutputType[P]>
        }
      >
    >


  export type vote_downSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    answers_id?: boolean
    users_id?: boolean
    create_at?: boolean
    update_at?: boolean
    answer?: boolean | answersDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["vote_down"]>


  export type vote_downSelectScalar = {
    id?: boolean
    answers_id?: boolean
    users_id?: boolean
    create_at?: boolean
    update_at?: boolean
  }

  export type vote_downInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    answer?: boolean | answersDefaultArgs<ExtArgs>
    user?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $vote_downPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "vote_down"
    objects: {
      answer: Prisma.$answersPayload<ExtArgs>
      user: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      answers_id: string
      users_id: string
      create_at: Date
      update_at: Date
    }, ExtArgs["result"]["vote_down"]>
    composites: {}
  }

  type vote_downGetPayload<S extends boolean | null | undefined | vote_downDefaultArgs> = $Result.GetResult<Prisma.$vote_downPayload, S>

  type vote_downCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<vote_downFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Vote_downCountAggregateInputType | true
    }

  export interface vote_downDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['vote_down'], meta: { name: 'vote_down' } }
    /**
     * Find zero or one Vote_down that matches the filter.
     * @param {vote_downFindUniqueArgs} args - Arguments to find a Vote_down
     * @example
     * // Get one Vote_down
     * const vote_down = await prisma.vote_down.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends vote_downFindUniqueArgs>(args: SelectSubset<T, vote_downFindUniqueArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Vote_down that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {vote_downFindUniqueOrThrowArgs} args - Arguments to find a Vote_down
     * @example
     * // Get one Vote_down
     * const vote_down = await prisma.vote_down.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends vote_downFindUniqueOrThrowArgs>(args: SelectSubset<T, vote_downFindUniqueOrThrowArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Vote_down that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_downFindFirstArgs} args - Arguments to find a Vote_down
     * @example
     * // Get one Vote_down
     * const vote_down = await prisma.vote_down.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends vote_downFindFirstArgs>(args?: SelectSubset<T, vote_downFindFirstArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Vote_down that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_downFindFirstOrThrowArgs} args - Arguments to find a Vote_down
     * @example
     * // Get one Vote_down
     * const vote_down = await prisma.vote_down.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends vote_downFindFirstOrThrowArgs>(args?: SelectSubset<T, vote_downFindFirstOrThrowArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Vote_downs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_downFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Vote_downs
     * const vote_downs = await prisma.vote_down.findMany()
     * 
     * // Get first 10 Vote_downs
     * const vote_downs = await prisma.vote_down.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const vote_downWithIdOnly = await prisma.vote_down.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends vote_downFindManyArgs>(args?: SelectSubset<T, vote_downFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Vote_down.
     * @param {vote_downCreateArgs} args - Arguments to create a Vote_down.
     * @example
     * // Create one Vote_down
     * const Vote_down = await prisma.vote_down.create({
     *   data: {
     *     // ... data to create a Vote_down
     *   }
     * })
     * 
     */
    create<T extends vote_downCreateArgs>(args: SelectSubset<T, vote_downCreateArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Vote_downs.
     * @param {vote_downCreateManyArgs} args - Arguments to create many Vote_downs.
     * @example
     * // Create many Vote_downs
     * const vote_down = await prisma.vote_down.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends vote_downCreateManyArgs>(args?: SelectSubset<T, vote_downCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Vote_down.
     * @param {vote_downDeleteArgs} args - Arguments to delete one Vote_down.
     * @example
     * // Delete one Vote_down
     * const Vote_down = await prisma.vote_down.delete({
     *   where: {
     *     // ... filter to delete one Vote_down
     *   }
     * })
     * 
     */
    delete<T extends vote_downDeleteArgs>(args: SelectSubset<T, vote_downDeleteArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Vote_down.
     * @param {vote_downUpdateArgs} args - Arguments to update one Vote_down.
     * @example
     * // Update one Vote_down
     * const vote_down = await prisma.vote_down.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends vote_downUpdateArgs>(args: SelectSubset<T, vote_downUpdateArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Vote_downs.
     * @param {vote_downDeleteManyArgs} args - Arguments to filter Vote_downs to delete.
     * @example
     * // Delete a few Vote_downs
     * const { count } = await prisma.vote_down.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends vote_downDeleteManyArgs>(args?: SelectSubset<T, vote_downDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Vote_downs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_downUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Vote_downs
     * const vote_down = await prisma.vote_down.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends vote_downUpdateManyArgs>(args: SelectSubset<T, vote_downUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Vote_down.
     * @param {vote_downUpsertArgs} args - Arguments to update or create a Vote_down.
     * @example
     * // Update or create a Vote_down
     * const vote_down = await prisma.vote_down.upsert({
     *   create: {
     *     // ... data to create a Vote_down
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vote_down we want to update
     *   }
     * })
     */
    upsert<T extends vote_downUpsertArgs>(args: SelectSubset<T, vote_downUpsertArgs<ExtArgs>>): Prisma__vote_downClient<$Result.GetResult<Prisma.$vote_downPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Vote_downs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_downCountArgs} args - Arguments to filter Vote_downs to count.
     * @example
     * // Count the number of Vote_downs
     * const count = await prisma.vote_down.count({
     *   where: {
     *     // ... the filter for the Vote_downs we want to count
     *   }
     * })
    **/
    count<T extends vote_downCountArgs>(
      args?: Subset<T, vote_downCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Vote_downCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vote_down.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Vote_downAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Vote_downAggregateArgs>(args: Subset<T, Vote_downAggregateArgs>): Prisma.PrismaPromise<GetVote_downAggregateType<T>>

    /**
     * Group by Vote_down.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {vote_downGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends vote_downGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: vote_downGroupByArgs['orderBy'] }
        : { orderBy?: vote_downGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, vote_downGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVote_downGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the vote_down model
   */
  readonly fields: vote_downFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for vote_down.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__vote_downClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    answer<T extends answersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, answersDefaultArgs<ExtArgs>>): Prisma__answersClient<$Result.GetResult<Prisma.$answersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the vote_down model
   */ 
  interface vote_downFieldRefs {
    readonly id: FieldRef<"vote_down", 'String'>
    readonly answers_id: FieldRef<"vote_down", 'String'>
    readonly users_id: FieldRef<"vote_down", 'String'>
    readonly create_at: FieldRef<"vote_down", 'DateTime'>
    readonly update_at: FieldRef<"vote_down", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * vote_down findUnique
   */
  export type vote_downFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * Filter, which vote_down to fetch.
     */
    where: vote_downWhereUniqueInput
  }

  /**
   * vote_down findUniqueOrThrow
   */
  export type vote_downFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * Filter, which vote_down to fetch.
     */
    where: vote_downWhereUniqueInput
  }

  /**
   * vote_down findFirst
   */
  export type vote_downFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * Filter, which vote_down to fetch.
     */
    where?: vote_downWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_downs to fetch.
     */
    orderBy?: vote_downOrderByWithRelationInput | vote_downOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vote_downs.
     */
    cursor?: vote_downWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_downs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_downs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vote_downs.
     */
    distinct?: Vote_downScalarFieldEnum | Vote_downScalarFieldEnum[]
  }

  /**
   * vote_down findFirstOrThrow
   */
  export type vote_downFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * Filter, which vote_down to fetch.
     */
    where?: vote_downWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_downs to fetch.
     */
    orderBy?: vote_downOrderByWithRelationInput | vote_downOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for vote_downs.
     */
    cursor?: vote_downWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_downs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_downs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of vote_downs.
     */
    distinct?: Vote_downScalarFieldEnum | Vote_downScalarFieldEnum[]
  }

  /**
   * vote_down findMany
   */
  export type vote_downFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * Filter, which vote_downs to fetch.
     */
    where?: vote_downWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of vote_downs to fetch.
     */
    orderBy?: vote_downOrderByWithRelationInput | vote_downOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing vote_downs.
     */
    cursor?: vote_downWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` vote_downs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` vote_downs.
     */
    skip?: number
    distinct?: Vote_downScalarFieldEnum | Vote_downScalarFieldEnum[]
  }

  /**
   * vote_down create
   */
  export type vote_downCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * The data needed to create a vote_down.
     */
    data: XOR<vote_downCreateInput, vote_downUncheckedCreateInput>
  }

  /**
   * vote_down createMany
   */
  export type vote_downCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many vote_downs.
     */
    data: vote_downCreateManyInput | vote_downCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * vote_down update
   */
  export type vote_downUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * The data needed to update a vote_down.
     */
    data: XOR<vote_downUpdateInput, vote_downUncheckedUpdateInput>
    /**
     * Choose, which vote_down to update.
     */
    where: vote_downWhereUniqueInput
  }

  /**
   * vote_down updateMany
   */
  export type vote_downUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update vote_downs.
     */
    data: XOR<vote_downUpdateManyMutationInput, vote_downUncheckedUpdateManyInput>
    /**
     * Filter which vote_downs to update
     */
    where?: vote_downWhereInput
  }

  /**
   * vote_down upsert
   */
  export type vote_downUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * The filter to search for the vote_down to update in case it exists.
     */
    where: vote_downWhereUniqueInput
    /**
     * In case the vote_down found by the `where` argument doesn't exist, create a new vote_down with this data.
     */
    create: XOR<vote_downCreateInput, vote_downUncheckedCreateInput>
    /**
     * In case the vote_down was found with the provided `where` argument, update it with this data.
     */
    update: XOR<vote_downUpdateInput, vote_downUncheckedUpdateInput>
  }

  /**
   * vote_down delete
   */
  export type vote_downDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
    /**
     * Filter which vote_down to delete.
     */
    where: vote_downWhereUniqueInput
  }

  /**
   * vote_down deleteMany
   */
  export type vote_downDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which vote_downs to delete
     */
    where?: vote_downWhereInput
  }

  /**
   * vote_down without action
   */
  export type vote_downDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the vote_down
     */
    select?: vote_downSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: vote_downInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    full_name: 'full_name',
    profile_url: 'profile_url',
    nidn_or_nim: 'nidn_or_nim',
    nama_perguruan_tinggi: 'nama_perguruan_tinggi',
    role: 'role',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const PostsScalarFieldEnum: {
    id: 'id',
    img_url: 'img_url',
    content: 'content',
    users_id: 'users_id',
    count_answers: 'count_answers',
    count_like: 'count_like',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type PostsScalarFieldEnum = (typeof PostsScalarFieldEnum)[keyof typeof PostsScalarFieldEnum]


  export const Posts_likeScalarFieldEnum: {
    id: 'id',
    posts_id: 'posts_id',
    users_id: 'users_id',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type Posts_likeScalarFieldEnum = (typeof Posts_likeScalarFieldEnum)[keyof typeof Posts_likeScalarFieldEnum]


  export const AnswersScalarFieldEnum: {
    id: 'id',
    posts_id: 'posts_id',
    users_id: 'users_id',
    answers: 'answers',
    vote_up: 'vote_up',
    vote_down: 'vote_down',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type AnswersScalarFieldEnum = (typeof AnswersScalarFieldEnum)[keyof typeof AnswersScalarFieldEnum]


  export const Vote_upScalarFieldEnum: {
    id: 'id',
    answers_id: 'answers_id',
    users_id: 'users_id',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type Vote_upScalarFieldEnum = (typeof Vote_upScalarFieldEnum)[keyof typeof Vote_upScalarFieldEnum]


  export const Vote_downScalarFieldEnum: {
    id: 'id',
    answers_id: 'answers_id',
    users_id: 'users_id',
    create_at: 'create_at',
    update_at: 'update_at'
  };

  export type Vote_downScalarFieldEnum = (typeof Vote_downScalarFieldEnum)[keyof typeof Vote_downScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: StringFilter<"users"> | string
    username?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    full_name?: StringNullableFilter<"users"> | string | null
    profile_url?: StringNullableFilter<"users"> | string | null
    nidn_or_nim?: StringNullableFilter<"users"> | string | null
    nama_perguruan_tinggi?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    create_at?: DateTimeFilter<"users"> | Date | string
    update_at?: DateTimeFilter<"users"> | Date | string
    posts?: PostsListRelationFilter
    posts_like?: Posts_likeListRelationFilter
    answers?: AnswersListRelationFilter
    vote_up?: Vote_upListRelationFilter
    vote_down?: Vote_downListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    full_name?: SortOrderInput | SortOrder
    profile_url?: SortOrderInput | SortOrder
    nidn_or_nim?: SortOrderInput | SortOrder
    nama_perguruan_tinggi?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    posts?: postsOrderByRelationAggregateInput
    posts_like?: posts_likeOrderByRelationAggregateInput
    answers?: answersOrderByRelationAggregateInput
    vote_up?: vote_upOrderByRelationAggregateInput
    vote_down?: vote_downOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    nidn_or_nim?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    password?: StringFilter<"users"> | string
    full_name?: StringNullableFilter<"users"> | string | null
    profile_url?: StringNullableFilter<"users"> | string | null
    nama_perguruan_tinggi?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    create_at?: DateTimeFilter<"users"> | Date | string
    update_at?: DateTimeFilter<"users"> | Date | string
    posts?: PostsListRelationFilter
    posts_like?: Posts_likeListRelationFilter
    answers?: AnswersListRelationFilter
    vote_up?: Vote_upListRelationFilter
    vote_down?: Vote_downListRelationFilter
  }, "id" | "username" | "nidn_or_nim">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    full_name?: SortOrderInput | SortOrder
    profile_url?: SortOrderInput | SortOrder
    nidn_or_nim?: SortOrderInput | SortOrder
    nama_perguruan_tinggi?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"users"> | string
    username?: StringWithAggregatesFilter<"users"> | string
    password?: StringWithAggregatesFilter<"users"> | string
    full_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    profile_url?: StringNullableWithAggregatesFilter<"users"> | string | null
    nidn_or_nim?: StringNullableWithAggregatesFilter<"users"> | string | null
    nama_perguruan_tinggi?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: StringNullableWithAggregatesFilter<"users"> | string | null
    create_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    update_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
  }

  export type postsWhereInput = {
    AND?: postsWhereInput | postsWhereInput[]
    OR?: postsWhereInput[]
    NOT?: postsWhereInput | postsWhereInput[]
    id?: StringFilter<"posts"> | string
    img_url?: StringNullableFilter<"posts"> | string | null
    content?: StringNullableFilter<"posts"> | string | null
    users_id?: StringFilter<"posts"> | string
    count_answers?: IntNullableFilter<"posts"> | number | null
    count_like?: IntNullableFilter<"posts"> | number | null
    create_at?: DateTimeFilter<"posts"> | Date | string
    update_at?: DateTimeFilter<"posts"> | Date | string
    user?: XOR<UsersRelationFilter, usersWhereInput>
    posts_like?: Posts_likeListRelationFilter
    answers?: AnswersListRelationFilter
  }

  export type postsOrderByWithRelationInput = {
    id?: SortOrder
    img_url?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    users_id?: SortOrder
    count_answers?: SortOrderInput | SortOrder
    count_like?: SortOrderInput | SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    user?: usersOrderByWithRelationInput
    posts_like?: posts_likeOrderByRelationAggregateInput
    answers?: answersOrderByRelationAggregateInput
  }

  export type postsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: postsWhereInput | postsWhereInput[]
    OR?: postsWhereInput[]
    NOT?: postsWhereInput | postsWhereInput[]
    img_url?: StringNullableFilter<"posts"> | string | null
    content?: StringNullableFilter<"posts"> | string | null
    users_id?: StringFilter<"posts"> | string
    count_answers?: IntNullableFilter<"posts"> | number | null
    count_like?: IntNullableFilter<"posts"> | number | null
    create_at?: DateTimeFilter<"posts"> | Date | string
    update_at?: DateTimeFilter<"posts"> | Date | string
    user?: XOR<UsersRelationFilter, usersWhereInput>
    posts_like?: Posts_likeListRelationFilter
    answers?: AnswersListRelationFilter
  }, "id">

  export type postsOrderByWithAggregationInput = {
    id?: SortOrder
    img_url?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    users_id?: SortOrder
    count_answers?: SortOrderInput | SortOrder
    count_like?: SortOrderInput | SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    _count?: postsCountOrderByAggregateInput
    _avg?: postsAvgOrderByAggregateInput
    _max?: postsMaxOrderByAggregateInput
    _min?: postsMinOrderByAggregateInput
    _sum?: postsSumOrderByAggregateInput
  }

  export type postsScalarWhereWithAggregatesInput = {
    AND?: postsScalarWhereWithAggregatesInput | postsScalarWhereWithAggregatesInput[]
    OR?: postsScalarWhereWithAggregatesInput[]
    NOT?: postsScalarWhereWithAggregatesInput | postsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"posts"> | string
    img_url?: StringNullableWithAggregatesFilter<"posts"> | string | null
    content?: StringNullableWithAggregatesFilter<"posts"> | string | null
    users_id?: StringWithAggregatesFilter<"posts"> | string
    count_answers?: IntNullableWithAggregatesFilter<"posts"> | number | null
    count_like?: IntNullableWithAggregatesFilter<"posts"> | number | null
    create_at?: DateTimeWithAggregatesFilter<"posts"> | Date | string
    update_at?: DateTimeWithAggregatesFilter<"posts"> | Date | string
  }

  export type posts_likeWhereInput = {
    AND?: posts_likeWhereInput | posts_likeWhereInput[]
    OR?: posts_likeWhereInput[]
    NOT?: posts_likeWhereInput | posts_likeWhereInput[]
    id?: StringFilter<"posts_like"> | string
    posts_id?: StringFilter<"posts_like"> | string
    users_id?: StringFilter<"posts_like"> | string
    create_at?: DateTimeFilter<"posts_like"> | Date | string
    update_at?: DateTimeFilter<"posts_like"> | Date | string
    post?: XOR<PostsRelationFilter, postsWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type posts_likeOrderByWithRelationInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    post?: postsOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type posts_likeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: posts_likeWhereInput | posts_likeWhereInput[]
    OR?: posts_likeWhereInput[]
    NOT?: posts_likeWhereInput | posts_likeWhereInput[]
    posts_id?: StringFilter<"posts_like"> | string
    users_id?: StringFilter<"posts_like"> | string
    create_at?: DateTimeFilter<"posts_like"> | Date | string
    update_at?: DateTimeFilter<"posts_like"> | Date | string
    post?: XOR<PostsRelationFilter, postsWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type posts_likeOrderByWithAggregationInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    _count?: posts_likeCountOrderByAggregateInput
    _max?: posts_likeMaxOrderByAggregateInput
    _min?: posts_likeMinOrderByAggregateInput
  }

  export type posts_likeScalarWhereWithAggregatesInput = {
    AND?: posts_likeScalarWhereWithAggregatesInput | posts_likeScalarWhereWithAggregatesInput[]
    OR?: posts_likeScalarWhereWithAggregatesInput[]
    NOT?: posts_likeScalarWhereWithAggregatesInput | posts_likeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"posts_like"> | string
    posts_id?: StringWithAggregatesFilter<"posts_like"> | string
    users_id?: StringWithAggregatesFilter<"posts_like"> | string
    create_at?: DateTimeWithAggregatesFilter<"posts_like"> | Date | string
    update_at?: DateTimeWithAggregatesFilter<"posts_like"> | Date | string
  }

  export type answersWhereInput = {
    AND?: answersWhereInput | answersWhereInput[]
    OR?: answersWhereInput[]
    NOT?: answersWhereInput | answersWhereInput[]
    id?: StringFilter<"answers"> | string
    posts_id?: StringFilter<"answers"> | string
    users_id?: StringFilter<"answers"> | string
    answers?: StringNullableFilter<"answers"> | string | null
    vote_up?: IntNullableFilter<"answers"> | number | null
    vote_down?: IntNullableFilter<"answers"> | number | null
    create_at?: DateTimeFilter<"answers"> | Date | string
    update_at?: DateTimeFilter<"answers"> | Date | string
    post?: XOR<PostsRelationFilter, postsWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
    vote_up_relations?: Vote_upListRelationFilter
    vote_down_relations?: Vote_downListRelationFilter
  }

  export type answersOrderByWithRelationInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    answers?: SortOrderInput | SortOrder
    vote_up?: SortOrderInput | SortOrder
    vote_down?: SortOrderInput | SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    post?: postsOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
    vote_up_relations?: vote_upOrderByRelationAggregateInput
    vote_down_relations?: vote_downOrderByRelationAggregateInput
  }

  export type answersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: answersWhereInput | answersWhereInput[]
    OR?: answersWhereInput[]
    NOT?: answersWhereInput | answersWhereInput[]
    posts_id?: StringFilter<"answers"> | string
    users_id?: StringFilter<"answers"> | string
    answers?: StringNullableFilter<"answers"> | string | null
    vote_up?: IntNullableFilter<"answers"> | number | null
    vote_down?: IntNullableFilter<"answers"> | number | null
    create_at?: DateTimeFilter<"answers"> | Date | string
    update_at?: DateTimeFilter<"answers"> | Date | string
    post?: XOR<PostsRelationFilter, postsWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
    vote_up_relations?: Vote_upListRelationFilter
    vote_down_relations?: Vote_downListRelationFilter
  }, "id">

  export type answersOrderByWithAggregationInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    answers?: SortOrderInput | SortOrder
    vote_up?: SortOrderInput | SortOrder
    vote_down?: SortOrderInput | SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    _count?: answersCountOrderByAggregateInput
    _avg?: answersAvgOrderByAggregateInput
    _max?: answersMaxOrderByAggregateInput
    _min?: answersMinOrderByAggregateInput
    _sum?: answersSumOrderByAggregateInput
  }

  export type answersScalarWhereWithAggregatesInput = {
    AND?: answersScalarWhereWithAggregatesInput | answersScalarWhereWithAggregatesInput[]
    OR?: answersScalarWhereWithAggregatesInput[]
    NOT?: answersScalarWhereWithAggregatesInput | answersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"answers"> | string
    posts_id?: StringWithAggregatesFilter<"answers"> | string
    users_id?: StringWithAggregatesFilter<"answers"> | string
    answers?: StringNullableWithAggregatesFilter<"answers"> | string | null
    vote_up?: IntNullableWithAggregatesFilter<"answers"> | number | null
    vote_down?: IntNullableWithAggregatesFilter<"answers"> | number | null
    create_at?: DateTimeWithAggregatesFilter<"answers"> | Date | string
    update_at?: DateTimeWithAggregatesFilter<"answers"> | Date | string
  }

  export type vote_upWhereInput = {
    AND?: vote_upWhereInput | vote_upWhereInput[]
    OR?: vote_upWhereInput[]
    NOT?: vote_upWhereInput | vote_upWhereInput[]
    id?: StringFilter<"vote_up"> | string
    answers_id?: StringFilter<"vote_up"> | string
    users_id?: StringFilter<"vote_up"> | string
    create_at?: DateTimeFilter<"vote_up"> | Date | string
    update_at?: DateTimeFilter<"vote_up"> | Date | string
    answer?: XOR<AnswersRelationFilter, answersWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type vote_upOrderByWithRelationInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    answer?: answersOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type vote_upWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: vote_upWhereInput | vote_upWhereInput[]
    OR?: vote_upWhereInput[]
    NOT?: vote_upWhereInput | vote_upWhereInput[]
    answers_id?: StringFilter<"vote_up"> | string
    users_id?: StringFilter<"vote_up"> | string
    create_at?: DateTimeFilter<"vote_up"> | Date | string
    update_at?: DateTimeFilter<"vote_up"> | Date | string
    answer?: XOR<AnswersRelationFilter, answersWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type vote_upOrderByWithAggregationInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    _count?: vote_upCountOrderByAggregateInput
    _max?: vote_upMaxOrderByAggregateInput
    _min?: vote_upMinOrderByAggregateInput
  }

  export type vote_upScalarWhereWithAggregatesInput = {
    AND?: vote_upScalarWhereWithAggregatesInput | vote_upScalarWhereWithAggregatesInput[]
    OR?: vote_upScalarWhereWithAggregatesInput[]
    NOT?: vote_upScalarWhereWithAggregatesInput | vote_upScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"vote_up"> | string
    answers_id?: StringWithAggregatesFilter<"vote_up"> | string
    users_id?: StringWithAggregatesFilter<"vote_up"> | string
    create_at?: DateTimeWithAggregatesFilter<"vote_up"> | Date | string
    update_at?: DateTimeWithAggregatesFilter<"vote_up"> | Date | string
  }

  export type vote_downWhereInput = {
    AND?: vote_downWhereInput | vote_downWhereInput[]
    OR?: vote_downWhereInput[]
    NOT?: vote_downWhereInput | vote_downWhereInput[]
    id?: StringFilter<"vote_down"> | string
    answers_id?: StringFilter<"vote_down"> | string
    users_id?: StringFilter<"vote_down"> | string
    create_at?: DateTimeFilter<"vote_down"> | Date | string
    update_at?: DateTimeFilter<"vote_down"> | Date | string
    answer?: XOR<AnswersRelationFilter, answersWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type vote_downOrderByWithRelationInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    answer?: answersOrderByWithRelationInput
    user?: usersOrderByWithRelationInput
  }

  export type vote_downWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: vote_downWhereInput | vote_downWhereInput[]
    OR?: vote_downWhereInput[]
    NOT?: vote_downWhereInput | vote_downWhereInput[]
    answers_id?: StringFilter<"vote_down"> | string
    users_id?: StringFilter<"vote_down"> | string
    create_at?: DateTimeFilter<"vote_down"> | Date | string
    update_at?: DateTimeFilter<"vote_down"> | Date | string
    answer?: XOR<AnswersRelationFilter, answersWhereInput>
    user?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type vote_downOrderByWithAggregationInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
    _count?: vote_downCountOrderByAggregateInput
    _max?: vote_downMaxOrderByAggregateInput
    _min?: vote_downMinOrderByAggregateInput
  }

  export type vote_downScalarWhereWithAggregatesInput = {
    AND?: vote_downScalarWhereWithAggregatesInput | vote_downScalarWhereWithAggregatesInput[]
    OR?: vote_downScalarWhereWithAggregatesInput[]
    NOT?: vote_downScalarWhereWithAggregatesInput | vote_downScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"vote_down"> | string
    answers_id?: StringWithAggregatesFilter<"vote_down"> | string
    users_id?: StringWithAggregatesFilter<"vote_down"> | string
    create_at?: DateTimeWithAggregatesFilter<"vote_down"> | Date | string
    update_at?: DateTimeWithAggregatesFilter<"vote_down"> | Date | string
  }

  export type usersCreateInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsCreateNestedManyWithoutUserInput
    posts_like?: posts_likeCreateNestedManyWithoutUserInput
    answers?: answersCreateNestedManyWithoutUserInput
    vote_up?: vote_upCreateNestedManyWithoutUserInput
    vote_down?: vote_downCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsUncheckedCreateNestedManyWithoutUserInput
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutUserInput
    answers?: answersUncheckedCreateNestedManyWithoutUserInput
    vote_up?: vote_upUncheckedCreateNestedManyWithoutUserInput
    vote_down?: vote_downUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUpdateManyWithoutUserNestedInput
    answers?: answersUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUncheckedUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUncheckedUpdateManyWithoutUserNestedInput
    answers?: answersUncheckedUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUncheckedUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUncheckedUpdateManyWithoutUserNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type postsCreateInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    user: usersCreateNestedOneWithoutPostsInput
    posts_like?: posts_likeCreateNestedManyWithoutPostInput
    answers?: answersCreateNestedManyWithoutPostInput
  }

  export type postsUncheckedCreateInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    users_id: string
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutPostInput
    answers?: answersUncheckedCreateNestedManyWithoutPostInput
  }

  export type postsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutPostsNestedInput
    posts_like?: posts_likeUpdateManyWithoutPostNestedInput
    answers?: answersUpdateManyWithoutPostNestedInput
  }

  export type postsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    users_id?: StringFieldUpdateOperationsInput | string
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts_like?: posts_likeUncheckedUpdateManyWithoutPostNestedInput
    answers?: answersUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postsCreateManyInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    users_id: string
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
  }

  export type postsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type postsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    users_id?: StringFieldUpdateOperationsInput | string
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type posts_likeCreateInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    post: postsCreateNestedOneWithoutPosts_likeInput
    user: usersCreateNestedOneWithoutPosts_likeInput
  }

  export type posts_likeUncheckedCreateInput = {
    id?: string
    posts_id: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type posts_likeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postsUpdateOneRequiredWithoutPosts_likeNestedInput
    user?: usersUpdateOneRequiredWithoutPosts_likeNestedInput
  }

  export type posts_likeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type posts_likeCreateManyInput = {
    id?: string
    posts_id: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type posts_likeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type posts_likeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type answersCreateInput = {
    id?: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    post: postsCreateNestedOneWithoutAnswersInput
    user: usersCreateNestedOneWithoutAnswersInput
    vote_up_relations?: vote_upCreateNestedManyWithoutAnswerInput
    vote_down_relations?: vote_downCreateNestedManyWithoutAnswerInput
  }

  export type answersUncheckedCreateInput = {
    id?: string
    posts_id: string
    users_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    vote_up_relations?: vote_upUncheckedCreateNestedManyWithoutAnswerInput
    vote_down_relations?: vote_downUncheckedCreateNestedManyWithoutAnswerInput
  }

  export type answersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postsUpdateOneRequiredWithoutAnswersNestedInput
    user?: usersUpdateOneRequiredWithoutAnswersNestedInput
    vote_up_relations?: vote_upUpdateManyWithoutAnswerNestedInput
    vote_down_relations?: vote_downUpdateManyWithoutAnswerNestedInput
  }

  export type answersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_up_relations?: vote_upUncheckedUpdateManyWithoutAnswerNestedInput
    vote_down_relations?: vote_downUncheckedUpdateManyWithoutAnswerNestedInput
  }

  export type answersCreateManyInput = {
    id?: string
    posts_id: string
    users_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
  }

  export type answersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type answersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_upCreateInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    answer: answersCreateNestedOneWithoutVote_up_relationsInput
    user: usersCreateNestedOneWithoutVote_upInput
  }

  export type vote_upUncheckedCreateInput = {
    id?: string
    answers_id: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_upUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    answer?: answersUpdateOneRequiredWithoutVote_up_relationsNestedInput
    user?: usersUpdateOneRequiredWithoutVote_upNestedInput
  }

  export type vote_upUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_upCreateManyInput = {
    id?: string
    answers_id: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_upUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_upUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_downCreateInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    answer: answersCreateNestedOneWithoutVote_down_relationsInput
    user: usersCreateNestedOneWithoutVote_downInput
  }

  export type vote_downUncheckedCreateInput = {
    id?: string
    answers_id: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_downUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    answer?: answersUpdateOneRequiredWithoutVote_down_relationsNestedInput
    user?: usersUpdateOneRequiredWithoutVote_downNestedInput
  }

  export type vote_downUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_downCreateManyInput = {
    id?: string
    answers_id: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_downUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_downUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type PostsListRelationFilter = {
    every?: postsWhereInput
    some?: postsWhereInput
    none?: postsWhereInput
  }

  export type Posts_likeListRelationFilter = {
    every?: posts_likeWhereInput
    some?: posts_likeWhereInput
    none?: posts_likeWhereInput
  }

  export type AnswersListRelationFilter = {
    every?: answersWhereInput
    some?: answersWhereInput
    none?: answersWhereInput
  }

  export type Vote_upListRelationFilter = {
    every?: vote_upWhereInput
    some?: vote_upWhereInput
    none?: vote_upWhereInput
  }

  export type Vote_downListRelationFilter = {
    every?: vote_downWhereInput
    some?: vote_downWhereInput
    none?: vote_downWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type postsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type posts_likeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type answersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type vote_upOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type vote_downOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    full_name?: SortOrder
    profile_url?: SortOrder
    nidn_or_nim?: SortOrder
    nama_perguruan_tinggi?: SortOrder
    role?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    full_name?: SortOrder
    profile_url?: SortOrder
    nidn_or_nim?: SortOrder
    nama_perguruan_tinggi?: SortOrder
    role?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    full_name?: SortOrder
    profile_url?: SortOrder
    nidn_or_nim?: SortOrder
    nama_perguruan_tinggi?: SortOrder
    role?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type postsCountOrderByAggregateInput = {
    id?: SortOrder
    img_url?: SortOrder
    content?: SortOrder
    users_id?: SortOrder
    count_answers?: SortOrder
    count_like?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type postsAvgOrderByAggregateInput = {
    count_answers?: SortOrder
    count_like?: SortOrder
  }

  export type postsMaxOrderByAggregateInput = {
    id?: SortOrder
    img_url?: SortOrder
    content?: SortOrder
    users_id?: SortOrder
    count_answers?: SortOrder
    count_like?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type postsMinOrderByAggregateInput = {
    id?: SortOrder
    img_url?: SortOrder
    content?: SortOrder
    users_id?: SortOrder
    count_answers?: SortOrder
    count_like?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type postsSumOrderByAggregateInput = {
    count_answers?: SortOrder
    count_like?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type PostsRelationFilter = {
    is?: postsWhereInput
    isNot?: postsWhereInput
  }

  export type posts_likeCountOrderByAggregateInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type posts_likeMaxOrderByAggregateInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type posts_likeMinOrderByAggregateInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type answersCountOrderByAggregateInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    answers?: SortOrder
    vote_up?: SortOrder
    vote_down?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type answersAvgOrderByAggregateInput = {
    vote_up?: SortOrder
    vote_down?: SortOrder
  }

  export type answersMaxOrderByAggregateInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    answers?: SortOrder
    vote_up?: SortOrder
    vote_down?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type answersMinOrderByAggregateInput = {
    id?: SortOrder
    posts_id?: SortOrder
    users_id?: SortOrder
    answers?: SortOrder
    vote_up?: SortOrder
    vote_down?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type answersSumOrderByAggregateInput = {
    vote_up?: SortOrder
    vote_down?: SortOrder
  }

  export type AnswersRelationFilter = {
    is?: answersWhereInput
    isNot?: answersWhereInput
  }

  export type vote_upCountOrderByAggregateInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type vote_upMaxOrderByAggregateInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type vote_upMinOrderByAggregateInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type vote_downCountOrderByAggregateInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type vote_downMaxOrderByAggregateInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type vote_downMinOrderByAggregateInput = {
    id?: SortOrder
    answers_id?: SortOrder
    users_id?: SortOrder
    create_at?: SortOrder
    update_at?: SortOrder
  }

  export type postsCreateNestedManyWithoutUserInput = {
    create?: XOR<postsCreateWithoutUserInput, postsUncheckedCreateWithoutUserInput> | postsCreateWithoutUserInput[] | postsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUserInput | postsCreateOrConnectWithoutUserInput[]
    createMany?: postsCreateManyUserInputEnvelope
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
  }

  export type posts_likeCreateNestedManyWithoutUserInput = {
    create?: XOR<posts_likeCreateWithoutUserInput, posts_likeUncheckedCreateWithoutUserInput> | posts_likeCreateWithoutUserInput[] | posts_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutUserInput | posts_likeCreateOrConnectWithoutUserInput[]
    createMany?: posts_likeCreateManyUserInputEnvelope
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
  }

  export type answersCreateNestedManyWithoutUserInput = {
    create?: XOR<answersCreateWithoutUserInput, answersUncheckedCreateWithoutUserInput> | answersCreateWithoutUserInput[] | answersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: answersCreateOrConnectWithoutUserInput | answersCreateOrConnectWithoutUserInput[]
    createMany?: answersCreateManyUserInputEnvelope
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
  }

  export type vote_upCreateNestedManyWithoutUserInput = {
    create?: XOR<vote_upCreateWithoutUserInput, vote_upUncheckedCreateWithoutUserInput> | vote_upCreateWithoutUserInput[] | vote_upUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutUserInput | vote_upCreateOrConnectWithoutUserInput[]
    createMany?: vote_upCreateManyUserInputEnvelope
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
  }

  export type vote_downCreateNestedManyWithoutUserInput = {
    create?: XOR<vote_downCreateWithoutUserInput, vote_downUncheckedCreateWithoutUserInput> | vote_downCreateWithoutUserInput[] | vote_downUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutUserInput | vote_downCreateOrConnectWithoutUserInput[]
    createMany?: vote_downCreateManyUserInputEnvelope
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
  }

  export type postsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<postsCreateWithoutUserInput, postsUncheckedCreateWithoutUserInput> | postsCreateWithoutUserInput[] | postsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUserInput | postsCreateOrConnectWithoutUserInput[]
    createMany?: postsCreateManyUserInputEnvelope
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
  }

  export type posts_likeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<posts_likeCreateWithoutUserInput, posts_likeUncheckedCreateWithoutUserInput> | posts_likeCreateWithoutUserInput[] | posts_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutUserInput | posts_likeCreateOrConnectWithoutUserInput[]
    createMany?: posts_likeCreateManyUserInputEnvelope
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
  }

  export type answersUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<answersCreateWithoutUserInput, answersUncheckedCreateWithoutUserInput> | answersCreateWithoutUserInput[] | answersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: answersCreateOrConnectWithoutUserInput | answersCreateOrConnectWithoutUserInput[]
    createMany?: answersCreateManyUserInputEnvelope
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
  }

  export type vote_upUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<vote_upCreateWithoutUserInput, vote_upUncheckedCreateWithoutUserInput> | vote_upCreateWithoutUserInput[] | vote_upUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutUserInput | vote_upCreateOrConnectWithoutUserInput[]
    createMany?: vote_upCreateManyUserInputEnvelope
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
  }

  export type vote_downUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<vote_downCreateWithoutUserInput, vote_downUncheckedCreateWithoutUserInput> | vote_downCreateWithoutUserInput[] | vote_downUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutUserInput | vote_downCreateOrConnectWithoutUserInput[]
    createMany?: vote_downCreateManyUserInputEnvelope
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type postsUpdateManyWithoutUserNestedInput = {
    create?: XOR<postsCreateWithoutUserInput, postsUncheckedCreateWithoutUserInput> | postsCreateWithoutUserInput[] | postsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUserInput | postsCreateOrConnectWithoutUserInput[]
    upsert?: postsUpsertWithWhereUniqueWithoutUserInput | postsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: postsCreateManyUserInputEnvelope
    set?: postsWhereUniqueInput | postsWhereUniqueInput[]
    disconnect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    delete?: postsWhereUniqueInput | postsWhereUniqueInput[]
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    update?: postsUpdateWithWhereUniqueWithoutUserInput | postsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: postsUpdateManyWithWhereWithoutUserInput | postsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: postsScalarWhereInput | postsScalarWhereInput[]
  }

  export type posts_likeUpdateManyWithoutUserNestedInput = {
    create?: XOR<posts_likeCreateWithoutUserInput, posts_likeUncheckedCreateWithoutUserInput> | posts_likeCreateWithoutUserInput[] | posts_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutUserInput | posts_likeCreateOrConnectWithoutUserInput[]
    upsert?: posts_likeUpsertWithWhereUniqueWithoutUserInput | posts_likeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: posts_likeCreateManyUserInputEnvelope
    set?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    disconnect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    delete?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    update?: posts_likeUpdateWithWhereUniqueWithoutUserInput | posts_likeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: posts_likeUpdateManyWithWhereWithoutUserInput | posts_likeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: posts_likeScalarWhereInput | posts_likeScalarWhereInput[]
  }

  export type answersUpdateManyWithoutUserNestedInput = {
    create?: XOR<answersCreateWithoutUserInput, answersUncheckedCreateWithoutUserInput> | answersCreateWithoutUserInput[] | answersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: answersCreateOrConnectWithoutUserInput | answersCreateOrConnectWithoutUserInput[]
    upsert?: answersUpsertWithWhereUniqueWithoutUserInput | answersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: answersCreateManyUserInputEnvelope
    set?: answersWhereUniqueInput | answersWhereUniqueInput[]
    disconnect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    delete?: answersWhereUniqueInput | answersWhereUniqueInput[]
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    update?: answersUpdateWithWhereUniqueWithoutUserInput | answersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: answersUpdateManyWithWhereWithoutUserInput | answersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: answersScalarWhereInput | answersScalarWhereInput[]
  }

  export type vote_upUpdateManyWithoutUserNestedInput = {
    create?: XOR<vote_upCreateWithoutUserInput, vote_upUncheckedCreateWithoutUserInput> | vote_upCreateWithoutUserInput[] | vote_upUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutUserInput | vote_upCreateOrConnectWithoutUserInput[]
    upsert?: vote_upUpsertWithWhereUniqueWithoutUserInput | vote_upUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: vote_upCreateManyUserInputEnvelope
    set?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    disconnect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    delete?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    update?: vote_upUpdateWithWhereUniqueWithoutUserInput | vote_upUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: vote_upUpdateManyWithWhereWithoutUserInput | vote_upUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: vote_upScalarWhereInput | vote_upScalarWhereInput[]
  }

  export type vote_downUpdateManyWithoutUserNestedInput = {
    create?: XOR<vote_downCreateWithoutUserInput, vote_downUncheckedCreateWithoutUserInput> | vote_downCreateWithoutUserInput[] | vote_downUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutUserInput | vote_downCreateOrConnectWithoutUserInput[]
    upsert?: vote_downUpsertWithWhereUniqueWithoutUserInput | vote_downUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: vote_downCreateManyUserInputEnvelope
    set?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    disconnect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    delete?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    update?: vote_downUpdateWithWhereUniqueWithoutUserInput | vote_downUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: vote_downUpdateManyWithWhereWithoutUserInput | vote_downUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: vote_downScalarWhereInput | vote_downScalarWhereInput[]
  }

  export type postsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<postsCreateWithoutUserInput, postsUncheckedCreateWithoutUserInput> | postsCreateWithoutUserInput[] | postsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: postsCreateOrConnectWithoutUserInput | postsCreateOrConnectWithoutUserInput[]
    upsert?: postsUpsertWithWhereUniqueWithoutUserInput | postsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: postsCreateManyUserInputEnvelope
    set?: postsWhereUniqueInput | postsWhereUniqueInput[]
    disconnect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    delete?: postsWhereUniqueInput | postsWhereUniqueInput[]
    connect?: postsWhereUniqueInput | postsWhereUniqueInput[]
    update?: postsUpdateWithWhereUniqueWithoutUserInput | postsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: postsUpdateManyWithWhereWithoutUserInput | postsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: postsScalarWhereInput | postsScalarWhereInput[]
  }

  export type posts_likeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<posts_likeCreateWithoutUserInput, posts_likeUncheckedCreateWithoutUserInput> | posts_likeCreateWithoutUserInput[] | posts_likeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutUserInput | posts_likeCreateOrConnectWithoutUserInput[]
    upsert?: posts_likeUpsertWithWhereUniqueWithoutUserInput | posts_likeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: posts_likeCreateManyUserInputEnvelope
    set?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    disconnect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    delete?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    update?: posts_likeUpdateWithWhereUniqueWithoutUserInput | posts_likeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: posts_likeUpdateManyWithWhereWithoutUserInput | posts_likeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: posts_likeScalarWhereInput | posts_likeScalarWhereInput[]
  }

  export type answersUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<answersCreateWithoutUserInput, answersUncheckedCreateWithoutUserInput> | answersCreateWithoutUserInput[] | answersUncheckedCreateWithoutUserInput[]
    connectOrCreate?: answersCreateOrConnectWithoutUserInput | answersCreateOrConnectWithoutUserInput[]
    upsert?: answersUpsertWithWhereUniqueWithoutUserInput | answersUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: answersCreateManyUserInputEnvelope
    set?: answersWhereUniqueInput | answersWhereUniqueInput[]
    disconnect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    delete?: answersWhereUniqueInput | answersWhereUniqueInput[]
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    update?: answersUpdateWithWhereUniqueWithoutUserInput | answersUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: answersUpdateManyWithWhereWithoutUserInput | answersUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: answersScalarWhereInput | answersScalarWhereInput[]
  }

  export type vote_upUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<vote_upCreateWithoutUserInput, vote_upUncheckedCreateWithoutUserInput> | vote_upCreateWithoutUserInput[] | vote_upUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutUserInput | vote_upCreateOrConnectWithoutUserInput[]
    upsert?: vote_upUpsertWithWhereUniqueWithoutUserInput | vote_upUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: vote_upCreateManyUserInputEnvelope
    set?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    disconnect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    delete?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    update?: vote_upUpdateWithWhereUniqueWithoutUserInput | vote_upUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: vote_upUpdateManyWithWhereWithoutUserInput | vote_upUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: vote_upScalarWhereInput | vote_upScalarWhereInput[]
  }

  export type vote_downUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<vote_downCreateWithoutUserInput, vote_downUncheckedCreateWithoutUserInput> | vote_downCreateWithoutUserInput[] | vote_downUncheckedCreateWithoutUserInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutUserInput | vote_downCreateOrConnectWithoutUserInput[]
    upsert?: vote_downUpsertWithWhereUniqueWithoutUserInput | vote_downUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: vote_downCreateManyUserInputEnvelope
    set?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    disconnect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    delete?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    update?: vote_downUpdateWithWhereUniqueWithoutUserInput | vote_downUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: vote_downUpdateManyWithWhereWithoutUserInput | vote_downUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: vote_downScalarWhereInput | vote_downScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutPostsInput = {
    create?: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPostsInput
    connect?: usersWhereUniqueInput
  }

  export type posts_likeCreateNestedManyWithoutPostInput = {
    create?: XOR<posts_likeCreateWithoutPostInput, posts_likeUncheckedCreateWithoutPostInput> | posts_likeCreateWithoutPostInput[] | posts_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutPostInput | posts_likeCreateOrConnectWithoutPostInput[]
    createMany?: posts_likeCreateManyPostInputEnvelope
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
  }

  export type answersCreateNestedManyWithoutPostInput = {
    create?: XOR<answersCreateWithoutPostInput, answersUncheckedCreateWithoutPostInput> | answersCreateWithoutPostInput[] | answersUncheckedCreateWithoutPostInput[]
    connectOrCreate?: answersCreateOrConnectWithoutPostInput | answersCreateOrConnectWithoutPostInput[]
    createMany?: answersCreateManyPostInputEnvelope
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
  }

  export type posts_likeUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<posts_likeCreateWithoutPostInput, posts_likeUncheckedCreateWithoutPostInput> | posts_likeCreateWithoutPostInput[] | posts_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutPostInput | posts_likeCreateOrConnectWithoutPostInput[]
    createMany?: posts_likeCreateManyPostInputEnvelope
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
  }

  export type answersUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<answersCreateWithoutPostInput, answersUncheckedCreateWithoutPostInput> | answersCreateWithoutPostInput[] | answersUncheckedCreateWithoutPostInput[]
    connectOrCreate?: answersCreateOrConnectWithoutPostInput | answersCreateOrConnectWithoutPostInput[]
    createMany?: answersCreateManyPostInputEnvelope
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usersUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    connectOrCreate?: usersCreateOrConnectWithoutPostsInput
    upsert?: usersUpsertWithoutPostsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPostsInput, usersUpdateWithoutPostsInput>, usersUncheckedUpdateWithoutPostsInput>
  }

  export type posts_likeUpdateManyWithoutPostNestedInput = {
    create?: XOR<posts_likeCreateWithoutPostInput, posts_likeUncheckedCreateWithoutPostInput> | posts_likeCreateWithoutPostInput[] | posts_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutPostInput | posts_likeCreateOrConnectWithoutPostInput[]
    upsert?: posts_likeUpsertWithWhereUniqueWithoutPostInput | posts_likeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: posts_likeCreateManyPostInputEnvelope
    set?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    disconnect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    delete?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    update?: posts_likeUpdateWithWhereUniqueWithoutPostInput | posts_likeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: posts_likeUpdateManyWithWhereWithoutPostInput | posts_likeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: posts_likeScalarWhereInput | posts_likeScalarWhereInput[]
  }

  export type answersUpdateManyWithoutPostNestedInput = {
    create?: XOR<answersCreateWithoutPostInput, answersUncheckedCreateWithoutPostInput> | answersCreateWithoutPostInput[] | answersUncheckedCreateWithoutPostInput[]
    connectOrCreate?: answersCreateOrConnectWithoutPostInput | answersCreateOrConnectWithoutPostInput[]
    upsert?: answersUpsertWithWhereUniqueWithoutPostInput | answersUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: answersCreateManyPostInputEnvelope
    set?: answersWhereUniqueInput | answersWhereUniqueInput[]
    disconnect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    delete?: answersWhereUniqueInput | answersWhereUniqueInput[]
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    update?: answersUpdateWithWhereUniqueWithoutPostInput | answersUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: answersUpdateManyWithWhereWithoutPostInput | answersUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: answersScalarWhereInput | answersScalarWhereInput[]
  }

  export type posts_likeUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<posts_likeCreateWithoutPostInput, posts_likeUncheckedCreateWithoutPostInput> | posts_likeCreateWithoutPostInput[] | posts_likeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: posts_likeCreateOrConnectWithoutPostInput | posts_likeCreateOrConnectWithoutPostInput[]
    upsert?: posts_likeUpsertWithWhereUniqueWithoutPostInput | posts_likeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: posts_likeCreateManyPostInputEnvelope
    set?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    disconnect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    delete?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    connect?: posts_likeWhereUniqueInput | posts_likeWhereUniqueInput[]
    update?: posts_likeUpdateWithWhereUniqueWithoutPostInput | posts_likeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: posts_likeUpdateManyWithWhereWithoutPostInput | posts_likeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: posts_likeScalarWhereInput | posts_likeScalarWhereInput[]
  }

  export type answersUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<answersCreateWithoutPostInput, answersUncheckedCreateWithoutPostInput> | answersCreateWithoutPostInput[] | answersUncheckedCreateWithoutPostInput[]
    connectOrCreate?: answersCreateOrConnectWithoutPostInput | answersCreateOrConnectWithoutPostInput[]
    upsert?: answersUpsertWithWhereUniqueWithoutPostInput | answersUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: answersCreateManyPostInputEnvelope
    set?: answersWhereUniqueInput | answersWhereUniqueInput[]
    disconnect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    delete?: answersWhereUniqueInput | answersWhereUniqueInput[]
    connect?: answersWhereUniqueInput | answersWhereUniqueInput[]
    update?: answersUpdateWithWhereUniqueWithoutPostInput | answersUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: answersUpdateManyWithWhereWithoutPostInput | answersUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: answersScalarWhereInput | answersScalarWhereInput[]
  }

  export type postsCreateNestedOneWithoutPosts_likeInput = {
    create?: XOR<postsCreateWithoutPosts_likeInput, postsUncheckedCreateWithoutPosts_likeInput>
    connectOrCreate?: postsCreateOrConnectWithoutPosts_likeInput
    connect?: postsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutPosts_likeInput = {
    create?: XOR<usersCreateWithoutPosts_likeInput, usersUncheckedCreateWithoutPosts_likeInput>
    connectOrCreate?: usersCreateOrConnectWithoutPosts_likeInput
    connect?: usersWhereUniqueInput
  }

  export type postsUpdateOneRequiredWithoutPosts_likeNestedInput = {
    create?: XOR<postsCreateWithoutPosts_likeInput, postsUncheckedCreateWithoutPosts_likeInput>
    connectOrCreate?: postsCreateOrConnectWithoutPosts_likeInput
    upsert?: postsUpsertWithoutPosts_likeInput
    connect?: postsWhereUniqueInput
    update?: XOR<XOR<postsUpdateToOneWithWhereWithoutPosts_likeInput, postsUpdateWithoutPosts_likeInput>, postsUncheckedUpdateWithoutPosts_likeInput>
  }

  export type usersUpdateOneRequiredWithoutPosts_likeNestedInput = {
    create?: XOR<usersCreateWithoutPosts_likeInput, usersUncheckedCreateWithoutPosts_likeInput>
    connectOrCreate?: usersCreateOrConnectWithoutPosts_likeInput
    upsert?: usersUpsertWithoutPosts_likeInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutPosts_likeInput, usersUpdateWithoutPosts_likeInput>, usersUncheckedUpdateWithoutPosts_likeInput>
  }

  export type postsCreateNestedOneWithoutAnswersInput = {
    create?: XOR<postsCreateWithoutAnswersInput, postsUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: postsCreateOrConnectWithoutAnswersInput
    connect?: postsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutAnswersInput = {
    create?: XOR<usersCreateWithoutAnswersInput, usersUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: usersCreateOrConnectWithoutAnswersInput
    connect?: usersWhereUniqueInput
  }

  export type vote_upCreateNestedManyWithoutAnswerInput = {
    create?: XOR<vote_upCreateWithoutAnswerInput, vote_upUncheckedCreateWithoutAnswerInput> | vote_upCreateWithoutAnswerInput[] | vote_upUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutAnswerInput | vote_upCreateOrConnectWithoutAnswerInput[]
    createMany?: vote_upCreateManyAnswerInputEnvelope
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
  }

  export type vote_downCreateNestedManyWithoutAnswerInput = {
    create?: XOR<vote_downCreateWithoutAnswerInput, vote_downUncheckedCreateWithoutAnswerInput> | vote_downCreateWithoutAnswerInput[] | vote_downUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutAnswerInput | vote_downCreateOrConnectWithoutAnswerInput[]
    createMany?: vote_downCreateManyAnswerInputEnvelope
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
  }

  export type vote_upUncheckedCreateNestedManyWithoutAnswerInput = {
    create?: XOR<vote_upCreateWithoutAnswerInput, vote_upUncheckedCreateWithoutAnswerInput> | vote_upCreateWithoutAnswerInput[] | vote_upUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutAnswerInput | vote_upCreateOrConnectWithoutAnswerInput[]
    createMany?: vote_upCreateManyAnswerInputEnvelope
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
  }

  export type vote_downUncheckedCreateNestedManyWithoutAnswerInput = {
    create?: XOR<vote_downCreateWithoutAnswerInput, vote_downUncheckedCreateWithoutAnswerInput> | vote_downCreateWithoutAnswerInput[] | vote_downUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutAnswerInput | vote_downCreateOrConnectWithoutAnswerInput[]
    createMany?: vote_downCreateManyAnswerInputEnvelope
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
  }

  export type postsUpdateOneRequiredWithoutAnswersNestedInput = {
    create?: XOR<postsCreateWithoutAnswersInput, postsUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: postsCreateOrConnectWithoutAnswersInput
    upsert?: postsUpsertWithoutAnswersInput
    connect?: postsWhereUniqueInput
    update?: XOR<XOR<postsUpdateToOneWithWhereWithoutAnswersInput, postsUpdateWithoutAnswersInput>, postsUncheckedUpdateWithoutAnswersInput>
  }

  export type usersUpdateOneRequiredWithoutAnswersNestedInput = {
    create?: XOR<usersCreateWithoutAnswersInput, usersUncheckedCreateWithoutAnswersInput>
    connectOrCreate?: usersCreateOrConnectWithoutAnswersInput
    upsert?: usersUpsertWithoutAnswersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAnswersInput, usersUpdateWithoutAnswersInput>, usersUncheckedUpdateWithoutAnswersInput>
  }

  export type vote_upUpdateManyWithoutAnswerNestedInput = {
    create?: XOR<vote_upCreateWithoutAnswerInput, vote_upUncheckedCreateWithoutAnswerInput> | vote_upCreateWithoutAnswerInput[] | vote_upUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutAnswerInput | vote_upCreateOrConnectWithoutAnswerInput[]
    upsert?: vote_upUpsertWithWhereUniqueWithoutAnswerInput | vote_upUpsertWithWhereUniqueWithoutAnswerInput[]
    createMany?: vote_upCreateManyAnswerInputEnvelope
    set?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    disconnect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    delete?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    update?: vote_upUpdateWithWhereUniqueWithoutAnswerInput | vote_upUpdateWithWhereUniqueWithoutAnswerInput[]
    updateMany?: vote_upUpdateManyWithWhereWithoutAnswerInput | vote_upUpdateManyWithWhereWithoutAnswerInput[]
    deleteMany?: vote_upScalarWhereInput | vote_upScalarWhereInput[]
  }

  export type vote_downUpdateManyWithoutAnswerNestedInput = {
    create?: XOR<vote_downCreateWithoutAnswerInput, vote_downUncheckedCreateWithoutAnswerInput> | vote_downCreateWithoutAnswerInput[] | vote_downUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutAnswerInput | vote_downCreateOrConnectWithoutAnswerInput[]
    upsert?: vote_downUpsertWithWhereUniqueWithoutAnswerInput | vote_downUpsertWithWhereUniqueWithoutAnswerInput[]
    createMany?: vote_downCreateManyAnswerInputEnvelope
    set?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    disconnect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    delete?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    update?: vote_downUpdateWithWhereUniqueWithoutAnswerInput | vote_downUpdateWithWhereUniqueWithoutAnswerInput[]
    updateMany?: vote_downUpdateManyWithWhereWithoutAnswerInput | vote_downUpdateManyWithWhereWithoutAnswerInput[]
    deleteMany?: vote_downScalarWhereInput | vote_downScalarWhereInput[]
  }

  export type vote_upUncheckedUpdateManyWithoutAnswerNestedInput = {
    create?: XOR<vote_upCreateWithoutAnswerInput, vote_upUncheckedCreateWithoutAnswerInput> | vote_upCreateWithoutAnswerInput[] | vote_upUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_upCreateOrConnectWithoutAnswerInput | vote_upCreateOrConnectWithoutAnswerInput[]
    upsert?: vote_upUpsertWithWhereUniqueWithoutAnswerInput | vote_upUpsertWithWhereUniqueWithoutAnswerInput[]
    createMany?: vote_upCreateManyAnswerInputEnvelope
    set?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    disconnect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    delete?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    connect?: vote_upWhereUniqueInput | vote_upWhereUniqueInput[]
    update?: vote_upUpdateWithWhereUniqueWithoutAnswerInput | vote_upUpdateWithWhereUniqueWithoutAnswerInput[]
    updateMany?: vote_upUpdateManyWithWhereWithoutAnswerInput | vote_upUpdateManyWithWhereWithoutAnswerInput[]
    deleteMany?: vote_upScalarWhereInput | vote_upScalarWhereInput[]
  }

  export type vote_downUncheckedUpdateManyWithoutAnswerNestedInput = {
    create?: XOR<vote_downCreateWithoutAnswerInput, vote_downUncheckedCreateWithoutAnswerInput> | vote_downCreateWithoutAnswerInput[] | vote_downUncheckedCreateWithoutAnswerInput[]
    connectOrCreate?: vote_downCreateOrConnectWithoutAnswerInput | vote_downCreateOrConnectWithoutAnswerInput[]
    upsert?: vote_downUpsertWithWhereUniqueWithoutAnswerInput | vote_downUpsertWithWhereUniqueWithoutAnswerInput[]
    createMany?: vote_downCreateManyAnswerInputEnvelope
    set?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    disconnect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    delete?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    connect?: vote_downWhereUniqueInput | vote_downWhereUniqueInput[]
    update?: vote_downUpdateWithWhereUniqueWithoutAnswerInput | vote_downUpdateWithWhereUniqueWithoutAnswerInput[]
    updateMany?: vote_downUpdateManyWithWhereWithoutAnswerInput | vote_downUpdateManyWithWhereWithoutAnswerInput[]
    deleteMany?: vote_downScalarWhereInput | vote_downScalarWhereInput[]
  }

  export type answersCreateNestedOneWithoutVote_up_relationsInput = {
    create?: XOR<answersCreateWithoutVote_up_relationsInput, answersUncheckedCreateWithoutVote_up_relationsInput>
    connectOrCreate?: answersCreateOrConnectWithoutVote_up_relationsInput
    connect?: answersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutVote_upInput = {
    create?: XOR<usersCreateWithoutVote_upInput, usersUncheckedCreateWithoutVote_upInput>
    connectOrCreate?: usersCreateOrConnectWithoutVote_upInput
    connect?: usersWhereUniqueInput
  }

  export type answersUpdateOneRequiredWithoutVote_up_relationsNestedInput = {
    create?: XOR<answersCreateWithoutVote_up_relationsInput, answersUncheckedCreateWithoutVote_up_relationsInput>
    connectOrCreate?: answersCreateOrConnectWithoutVote_up_relationsInput
    upsert?: answersUpsertWithoutVote_up_relationsInput
    connect?: answersWhereUniqueInput
    update?: XOR<XOR<answersUpdateToOneWithWhereWithoutVote_up_relationsInput, answersUpdateWithoutVote_up_relationsInput>, answersUncheckedUpdateWithoutVote_up_relationsInput>
  }

  export type usersUpdateOneRequiredWithoutVote_upNestedInput = {
    create?: XOR<usersCreateWithoutVote_upInput, usersUncheckedCreateWithoutVote_upInput>
    connectOrCreate?: usersCreateOrConnectWithoutVote_upInput
    upsert?: usersUpsertWithoutVote_upInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutVote_upInput, usersUpdateWithoutVote_upInput>, usersUncheckedUpdateWithoutVote_upInput>
  }

  export type answersCreateNestedOneWithoutVote_down_relationsInput = {
    create?: XOR<answersCreateWithoutVote_down_relationsInput, answersUncheckedCreateWithoutVote_down_relationsInput>
    connectOrCreate?: answersCreateOrConnectWithoutVote_down_relationsInput
    connect?: answersWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutVote_downInput = {
    create?: XOR<usersCreateWithoutVote_downInput, usersUncheckedCreateWithoutVote_downInput>
    connectOrCreate?: usersCreateOrConnectWithoutVote_downInput
    connect?: usersWhereUniqueInput
  }

  export type answersUpdateOneRequiredWithoutVote_down_relationsNestedInput = {
    create?: XOR<answersCreateWithoutVote_down_relationsInput, answersUncheckedCreateWithoutVote_down_relationsInput>
    connectOrCreate?: answersCreateOrConnectWithoutVote_down_relationsInput
    upsert?: answersUpsertWithoutVote_down_relationsInput
    connect?: answersWhereUniqueInput
    update?: XOR<XOR<answersUpdateToOneWithWhereWithoutVote_down_relationsInput, answersUpdateWithoutVote_down_relationsInput>, answersUncheckedUpdateWithoutVote_down_relationsInput>
  }

  export type usersUpdateOneRequiredWithoutVote_downNestedInput = {
    create?: XOR<usersCreateWithoutVote_downInput, usersUncheckedCreateWithoutVote_downInput>
    connectOrCreate?: usersCreateOrConnectWithoutVote_downInput
    upsert?: usersUpsertWithoutVote_downInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutVote_downInput, usersUpdateWithoutVote_downInput>, usersUncheckedUpdateWithoutVote_downInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type postsCreateWithoutUserInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    posts_like?: posts_likeCreateNestedManyWithoutPostInput
    answers?: answersCreateNestedManyWithoutPostInput
  }

  export type postsUncheckedCreateWithoutUserInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutPostInput
    answers?: answersUncheckedCreateNestedManyWithoutPostInput
  }

  export type postsCreateOrConnectWithoutUserInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutUserInput, postsUncheckedCreateWithoutUserInput>
  }

  export type postsCreateManyUserInputEnvelope = {
    data: postsCreateManyUserInput | postsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type posts_likeCreateWithoutUserInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    post: postsCreateNestedOneWithoutPosts_likeInput
  }

  export type posts_likeUncheckedCreateWithoutUserInput = {
    id?: string
    posts_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type posts_likeCreateOrConnectWithoutUserInput = {
    where: posts_likeWhereUniqueInput
    create: XOR<posts_likeCreateWithoutUserInput, posts_likeUncheckedCreateWithoutUserInput>
  }

  export type posts_likeCreateManyUserInputEnvelope = {
    data: posts_likeCreateManyUserInput | posts_likeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type answersCreateWithoutUserInput = {
    id?: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    post: postsCreateNestedOneWithoutAnswersInput
    vote_up_relations?: vote_upCreateNestedManyWithoutAnswerInput
    vote_down_relations?: vote_downCreateNestedManyWithoutAnswerInput
  }

  export type answersUncheckedCreateWithoutUserInput = {
    id?: string
    posts_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    vote_up_relations?: vote_upUncheckedCreateNestedManyWithoutAnswerInput
    vote_down_relations?: vote_downUncheckedCreateNestedManyWithoutAnswerInput
  }

  export type answersCreateOrConnectWithoutUserInput = {
    where: answersWhereUniqueInput
    create: XOR<answersCreateWithoutUserInput, answersUncheckedCreateWithoutUserInput>
  }

  export type answersCreateManyUserInputEnvelope = {
    data: answersCreateManyUserInput | answersCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type vote_upCreateWithoutUserInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    answer: answersCreateNestedOneWithoutVote_up_relationsInput
  }

  export type vote_upUncheckedCreateWithoutUserInput = {
    id?: string
    answers_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_upCreateOrConnectWithoutUserInput = {
    where: vote_upWhereUniqueInput
    create: XOR<vote_upCreateWithoutUserInput, vote_upUncheckedCreateWithoutUserInput>
  }

  export type vote_upCreateManyUserInputEnvelope = {
    data: vote_upCreateManyUserInput | vote_upCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type vote_downCreateWithoutUserInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    answer: answersCreateNestedOneWithoutVote_down_relationsInput
  }

  export type vote_downUncheckedCreateWithoutUserInput = {
    id?: string
    answers_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_downCreateOrConnectWithoutUserInput = {
    where: vote_downWhereUniqueInput
    create: XOR<vote_downCreateWithoutUserInput, vote_downUncheckedCreateWithoutUserInput>
  }

  export type vote_downCreateManyUserInputEnvelope = {
    data: vote_downCreateManyUserInput | vote_downCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type postsUpsertWithWhereUniqueWithoutUserInput = {
    where: postsWhereUniqueInput
    update: XOR<postsUpdateWithoutUserInput, postsUncheckedUpdateWithoutUserInput>
    create: XOR<postsCreateWithoutUserInput, postsUncheckedCreateWithoutUserInput>
  }

  export type postsUpdateWithWhereUniqueWithoutUserInput = {
    where: postsWhereUniqueInput
    data: XOR<postsUpdateWithoutUserInput, postsUncheckedUpdateWithoutUserInput>
  }

  export type postsUpdateManyWithWhereWithoutUserInput = {
    where: postsScalarWhereInput
    data: XOR<postsUpdateManyMutationInput, postsUncheckedUpdateManyWithoutUserInput>
  }

  export type postsScalarWhereInput = {
    AND?: postsScalarWhereInput | postsScalarWhereInput[]
    OR?: postsScalarWhereInput[]
    NOT?: postsScalarWhereInput | postsScalarWhereInput[]
    id?: StringFilter<"posts"> | string
    img_url?: StringNullableFilter<"posts"> | string | null
    content?: StringNullableFilter<"posts"> | string | null
    users_id?: StringFilter<"posts"> | string
    count_answers?: IntNullableFilter<"posts"> | number | null
    count_like?: IntNullableFilter<"posts"> | number | null
    create_at?: DateTimeFilter<"posts"> | Date | string
    update_at?: DateTimeFilter<"posts"> | Date | string
  }

  export type posts_likeUpsertWithWhereUniqueWithoutUserInput = {
    where: posts_likeWhereUniqueInput
    update: XOR<posts_likeUpdateWithoutUserInput, posts_likeUncheckedUpdateWithoutUserInput>
    create: XOR<posts_likeCreateWithoutUserInput, posts_likeUncheckedCreateWithoutUserInput>
  }

  export type posts_likeUpdateWithWhereUniqueWithoutUserInput = {
    where: posts_likeWhereUniqueInput
    data: XOR<posts_likeUpdateWithoutUserInput, posts_likeUncheckedUpdateWithoutUserInput>
  }

  export type posts_likeUpdateManyWithWhereWithoutUserInput = {
    where: posts_likeScalarWhereInput
    data: XOR<posts_likeUpdateManyMutationInput, posts_likeUncheckedUpdateManyWithoutUserInput>
  }

  export type posts_likeScalarWhereInput = {
    AND?: posts_likeScalarWhereInput | posts_likeScalarWhereInput[]
    OR?: posts_likeScalarWhereInput[]
    NOT?: posts_likeScalarWhereInput | posts_likeScalarWhereInput[]
    id?: StringFilter<"posts_like"> | string
    posts_id?: StringFilter<"posts_like"> | string
    users_id?: StringFilter<"posts_like"> | string
    create_at?: DateTimeFilter<"posts_like"> | Date | string
    update_at?: DateTimeFilter<"posts_like"> | Date | string
  }

  export type answersUpsertWithWhereUniqueWithoutUserInput = {
    where: answersWhereUniqueInput
    update: XOR<answersUpdateWithoutUserInput, answersUncheckedUpdateWithoutUserInput>
    create: XOR<answersCreateWithoutUserInput, answersUncheckedCreateWithoutUserInput>
  }

  export type answersUpdateWithWhereUniqueWithoutUserInput = {
    where: answersWhereUniqueInput
    data: XOR<answersUpdateWithoutUserInput, answersUncheckedUpdateWithoutUserInput>
  }

  export type answersUpdateManyWithWhereWithoutUserInput = {
    where: answersScalarWhereInput
    data: XOR<answersUpdateManyMutationInput, answersUncheckedUpdateManyWithoutUserInput>
  }

  export type answersScalarWhereInput = {
    AND?: answersScalarWhereInput | answersScalarWhereInput[]
    OR?: answersScalarWhereInput[]
    NOT?: answersScalarWhereInput | answersScalarWhereInput[]
    id?: StringFilter<"answers"> | string
    posts_id?: StringFilter<"answers"> | string
    users_id?: StringFilter<"answers"> | string
    answers?: StringNullableFilter<"answers"> | string | null
    vote_up?: IntNullableFilter<"answers"> | number | null
    vote_down?: IntNullableFilter<"answers"> | number | null
    create_at?: DateTimeFilter<"answers"> | Date | string
    update_at?: DateTimeFilter<"answers"> | Date | string
  }

  export type vote_upUpsertWithWhereUniqueWithoutUserInput = {
    where: vote_upWhereUniqueInput
    update: XOR<vote_upUpdateWithoutUserInput, vote_upUncheckedUpdateWithoutUserInput>
    create: XOR<vote_upCreateWithoutUserInput, vote_upUncheckedCreateWithoutUserInput>
  }

  export type vote_upUpdateWithWhereUniqueWithoutUserInput = {
    where: vote_upWhereUniqueInput
    data: XOR<vote_upUpdateWithoutUserInput, vote_upUncheckedUpdateWithoutUserInput>
  }

  export type vote_upUpdateManyWithWhereWithoutUserInput = {
    where: vote_upScalarWhereInput
    data: XOR<vote_upUpdateManyMutationInput, vote_upUncheckedUpdateManyWithoutUserInput>
  }

  export type vote_upScalarWhereInput = {
    AND?: vote_upScalarWhereInput | vote_upScalarWhereInput[]
    OR?: vote_upScalarWhereInput[]
    NOT?: vote_upScalarWhereInput | vote_upScalarWhereInput[]
    id?: StringFilter<"vote_up"> | string
    answers_id?: StringFilter<"vote_up"> | string
    users_id?: StringFilter<"vote_up"> | string
    create_at?: DateTimeFilter<"vote_up"> | Date | string
    update_at?: DateTimeFilter<"vote_up"> | Date | string
  }

  export type vote_downUpsertWithWhereUniqueWithoutUserInput = {
    where: vote_downWhereUniqueInput
    update: XOR<vote_downUpdateWithoutUserInput, vote_downUncheckedUpdateWithoutUserInput>
    create: XOR<vote_downCreateWithoutUserInput, vote_downUncheckedCreateWithoutUserInput>
  }

  export type vote_downUpdateWithWhereUniqueWithoutUserInput = {
    where: vote_downWhereUniqueInput
    data: XOR<vote_downUpdateWithoutUserInput, vote_downUncheckedUpdateWithoutUserInput>
  }

  export type vote_downUpdateManyWithWhereWithoutUserInput = {
    where: vote_downScalarWhereInput
    data: XOR<vote_downUpdateManyMutationInput, vote_downUncheckedUpdateManyWithoutUserInput>
  }

  export type vote_downScalarWhereInput = {
    AND?: vote_downScalarWhereInput | vote_downScalarWhereInput[]
    OR?: vote_downScalarWhereInput[]
    NOT?: vote_downScalarWhereInput | vote_downScalarWhereInput[]
    id?: StringFilter<"vote_down"> | string
    answers_id?: StringFilter<"vote_down"> | string
    users_id?: StringFilter<"vote_down"> | string
    create_at?: DateTimeFilter<"vote_down"> | Date | string
    update_at?: DateTimeFilter<"vote_down"> | Date | string
  }

  export type usersCreateWithoutPostsInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts_like?: posts_likeCreateNestedManyWithoutUserInput
    answers?: answersCreateNestedManyWithoutUserInput
    vote_up?: vote_upCreateNestedManyWithoutUserInput
    vote_down?: vote_downCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutPostsInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutUserInput
    answers?: answersUncheckedCreateNestedManyWithoutUserInput
    vote_up?: vote_upUncheckedCreateNestedManyWithoutUserInput
    vote_down?: vote_downUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutPostsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
  }

  export type posts_likeCreateWithoutPostInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    user: usersCreateNestedOneWithoutPosts_likeInput
  }

  export type posts_likeUncheckedCreateWithoutPostInput = {
    id?: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type posts_likeCreateOrConnectWithoutPostInput = {
    where: posts_likeWhereUniqueInput
    create: XOR<posts_likeCreateWithoutPostInput, posts_likeUncheckedCreateWithoutPostInput>
  }

  export type posts_likeCreateManyPostInputEnvelope = {
    data: posts_likeCreateManyPostInput | posts_likeCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type answersCreateWithoutPostInput = {
    id?: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    user: usersCreateNestedOneWithoutAnswersInput
    vote_up_relations?: vote_upCreateNestedManyWithoutAnswerInput
    vote_down_relations?: vote_downCreateNestedManyWithoutAnswerInput
  }

  export type answersUncheckedCreateWithoutPostInput = {
    id?: string
    users_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    vote_up_relations?: vote_upUncheckedCreateNestedManyWithoutAnswerInput
    vote_down_relations?: vote_downUncheckedCreateNestedManyWithoutAnswerInput
  }

  export type answersCreateOrConnectWithoutPostInput = {
    where: answersWhereUniqueInput
    create: XOR<answersCreateWithoutPostInput, answersUncheckedCreateWithoutPostInput>
  }

  export type answersCreateManyPostInputEnvelope = {
    data: answersCreateManyPostInput | answersCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutPostsInput = {
    update: XOR<usersUpdateWithoutPostsInput, usersUncheckedUpdateWithoutPostsInput>
    create: XOR<usersCreateWithoutPostsInput, usersUncheckedCreateWithoutPostsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPostsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPostsInput, usersUncheckedUpdateWithoutPostsInput>
  }

  export type usersUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts_like?: posts_likeUpdateManyWithoutUserNestedInput
    answers?: answersUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts_like?: posts_likeUncheckedUpdateManyWithoutUserNestedInput
    answers?: answersUncheckedUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUncheckedUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUncheckedUpdateManyWithoutUserNestedInput
  }

  export type posts_likeUpsertWithWhereUniqueWithoutPostInput = {
    where: posts_likeWhereUniqueInput
    update: XOR<posts_likeUpdateWithoutPostInput, posts_likeUncheckedUpdateWithoutPostInput>
    create: XOR<posts_likeCreateWithoutPostInput, posts_likeUncheckedCreateWithoutPostInput>
  }

  export type posts_likeUpdateWithWhereUniqueWithoutPostInput = {
    where: posts_likeWhereUniqueInput
    data: XOR<posts_likeUpdateWithoutPostInput, posts_likeUncheckedUpdateWithoutPostInput>
  }

  export type posts_likeUpdateManyWithWhereWithoutPostInput = {
    where: posts_likeScalarWhereInput
    data: XOR<posts_likeUpdateManyMutationInput, posts_likeUncheckedUpdateManyWithoutPostInput>
  }

  export type answersUpsertWithWhereUniqueWithoutPostInput = {
    where: answersWhereUniqueInput
    update: XOR<answersUpdateWithoutPostInput, answersUncheckedUpdateWithoutPostInput>
    create: XOR<answersCreateWithoutPostInput, answersUncheckedCreateWithoutPostInput>
  }

  export type answersUpdateWithWhereUniqueWithoutPostInput = {
    where: answersWhereUniqueInput
    data: XOR<answersUpdateWithoutPostInput, answersUncheckedUpdateWithoutPostInput>
  }

  export type answersUpdateManyWithWhereWithoutPostInput = {
    where: answersScalarWhereInput
    data: XOR<answersUpdateManyMutationInput, answersUncheckedUpdateManyWithoutPostInput>
  }

  export type postsCreateWithoutPosts_likeInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    user: usersCreateNestedOneWithoutPostsInput
    answers?: answersCreateNestedManyWithoutPostInput
  }

  export type postsUncheckedCreateWithoutPosts_likeInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    users_id: string
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    answers?: answersUncheckedCreateNestedManyWithoutPostInput
  }

  export type postsCreateOrConnectWithoutPosts_likeInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutPosts_likeInput, postsUncheckedCreateWithoutPosts_likeInput>
  }

  export type usersCreateWithoutPosts_likeInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsCreateNestedManyWithoutUserInput
    answers?: answersCreateNestedManyWithoutUserInput
    vote_up?: vote_upCreateNestedManyWithoutUserInput
    vote_down?: vote_downCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutPosts_likeInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsUncheckedCreateNestedManyWithoutUserInput
    answers?: answersUncheckedCreateNestedManyWithoutUserInput
    vote_up?: vote_upUncheckedCreateNestedManyWithoutUserInput
    vote_down?: vote_downUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutPosts_likeInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutPosts_likeInput, usersUncheckedCreateWithoutPosts_likeInput>
  }

  export type postsUpsertWithoutPosts_likeInput = {
    update: XOR<postsUpdateWithoutPosts_likeInput, postsUncheckedUpdateWithoutPosts_likeInput>
    create: XOR<postsCreateWithoutPosts_likeInput, postsUncheckedCreateWithoutPosts_likeInput>
    where?: postsWhereInput
  }

  export type postsUpdateToOneWithWhereWithoutPosts_likeInput = {
    where?: postsWhereInput
    data: XOR<postsUpdateWithoutPosts_likeInput, postsUncheckedUpdateWithoutPosts_likeInput>
  }

  export type postsUpdateWithoutPosts_likeInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutPostsNestedInput
    answers?: answersUpdateManyWithoutPostNestedInput
  }

  export type postsUncheckedUpdateWithoutPosts_likeInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    users_id?: StringFieldUpdateOperationsInput | string
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    answers?: answersUncheckedUpdateManyWithoutPostNestedInput
  }

  export type usersUpsertWithoutPosts_likeInput = {
    update: XOR<usersUpdateWithoutPosts_likeInput, usersUncheckedUpdateWithoutPosts_likeInput>
    create: XOR<usersCreateWithoutPosts_likeInput, usersUncheckedCreateWithoutPosts_likeInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutPosts_likeInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutPosts_likeInput, usersUncheckedUpdateWithoutPosts_likeInput>
  }

  export type usersUpdateWithoutPosts_likeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUpdateManyWithoutUserNestedInput
    answers?: answersUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutPosts_likeInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUncheckedUpdateManyWithoutUserNestedInput
    answers?: answersUncheckedUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUncheckedUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUncheckedUpdateManyWithoutUserNestedInput
  }

  export type postsCreateWithoutAnswersInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    user: usersCreateNestedOneWithoutPostsInput
    posts_like?: posts_likeCreateNestedManyWithoutPostInput
  }

  export type postsUncheckedCreateWithoutAnswersInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    users_id: string
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutPostInput
  }

  export type postsCreateOrConnectWithoutAnswersInput = {
    where: postsWhereUniqueInput
    create: XOR<postsCreateWithoutAnswersInput, postsUncheckedCreateWithoutAnswersInput>
  }

  export type usersCreateWithoutAnswersInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsCreateNestedManyWithoutUserInput
    posts_like?: posts_likeCreateNestedManyWithoutUserInput
    vote_up?: vote_upCreateNestedManyWithoutUserInput
    vote_down?: vote_downCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutAnswersInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsUncheckedCreateNestedManyWithoutUserInput
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutUserInput
    vote_up?: vote_upUncheckedCreateNestedManyWithoutUserInput
    vote_down?: vote_downUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutAnswersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAnswersInput, usersUncheckedCreateWithoutAnswersInput>
  }

  export type vote_upCreateWithoutAnswerInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    user: usersCreateNestedOneWithoutVote_upInput
  }

  export type vote_upUncheckedCreateWithoutAnswerInput = {
    id?: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_upCreateOrConnectWithoutAnswerInput = {
    where: vote_upWhereUniqueInput
    create: XOR<vote_upCreateWithoutAnswerInput, vote_upUncheckedCreateWithoutAnswerInput>
  }

  export type vote_upCreateManyAnswerInputEnvelope = {
    data: vote_upCreateManyAnswerInput | vote_upCreateManyAnswerInput[]
    skipDuplicates?: boolean
  }

  export type vote_downCreateWithoutAnswerInput = {
    id?: string
    create_at?: Date | string
    update_at?: Date | string
    user: usersCreateNestedOneWithoutVote_downInput
  }

  export type vote_downUncheckedCreateWithoutAnswerInput = {
    id?: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_downCreateOrConnectWithoutAnswerInput = {
    where: vote_downWhereUniqueInput
    create: XOR<vote_downCreateWithoutAnswerInput, vote_downUncheckedCreateWithoutAnswerInput>
  }

  export type vote_downCreateManyAnswerInputEnvelope = {
    data: vote_downCreateManyAnswerInput | vote_downCreateManyAnswerInput[]
    skipDuplicates?: boolean
  }

  export type postsUpsertWithoutAnswersInput = {
    update: XOR<postsUpdateWithoutAnswersInput, postsUncheckedUpdateWithoutAnswersInput>
    create: XOR<postsCreateWithoutAnswersInput, postsUncheckedCreateWithoutAnswersInput>
    where?: postsWhereInput
  }

  export type postsUpdateToOneWithWhereWithoutAnswersInput = {
    where?: postsWhereInput
    data: XOR<postsUpdateWithoutAnswersInput, postsUncheckedUpdateWithoutAnswersInput>
  }

  export type postsUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutPostsNestedInput
    posts_like?: posts_likeUpdateManyWithoutPostNestedInput
  }

  export type postsUncheckedUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    users_id?: StringFieldUpdateOperationsInput | string
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts_like?: posts_likeUncheckedUpdateManyWithoutPostNestedInput
  }

  export type usersUpsertWithoutAnswersInput = {
    update: XOR<usersUpdateWithoutAnswersInput, usersUncheckedUpdateWithoutAnswersInput>
    create: XOR<usersCreateWithoutAnswersInput, usersUncheckedCreateWithoutAnswersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAnswersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAnswersInput, usersUncheckedUpdateWithoutAnswersInput>
  }

  export type usersUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutAnswersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUncheckedUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUncheckedUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUncheckedUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUncheckedUpdateManyWithoutUserNestedInput
  }

  export type vote_upUpsertWithWhereUniqueWithoutAnswerInput = {
    where: vote_upWhereUniqueInput
    update: XOR<vote_upUpdateWithoutAnswerInput, vote_upUncheckedUpdateWithoutAnswerInput>
    create: XOR<vote_upCreateWithoutAnswerInput, vote_upUncheckedCreateWithoutAnswerInput>
  }

  export type vote_upUpdateWithWhereUniqueWithoutAnswerInput = {
    where: vote_upWhereUniqueInput
    data: XOR<vote_upUpdateWithoutAnswerInput, vote_upUncheckedUpdateWithoutAnswerInput>
  }

  export type vote_upUpdateManyWithWhereWithoutAnswerInput = {
    where: vote_upScalarWhereInput
    data: XOR<vote_upUpdateManyMutationInput, vote_upUncheckedUpdateManyWithoutAnswerInput>
  }

  export type vote_downUpsertWithWhereUniqueWithoutAnswerInput = {
    where: vote_downWhereUniqueInput
    update: XOR<vote_downUpdateWithoutAnswerInput, vote_downUncheckedUpdateWithoutAnswerInput>
    create: XOR<vote_downCreateWithoutAnswerInput, vote_downUncheckedCreateWithoutAnswerInput>
  }

  export type vote_downUpdateWithWhereUniqueWithoutAnswerInput = {
    where: vote_downWhereUniqueInput
    data: XOR<vote_downUpdateWithoutAnswerInput, vote_downUncheckedUpdateWithoutAnswerInput>
  }

  export type vote_downUpdateManyWithWhereWithoutAnswerInput = {
    where: vote_downScalarWhereInput
    data: XOR<vote_downUpdateManyMutationInput, vote_downUncheckedUpdateManyWithoutAnswerInput>
  }

  export type answersCreateWithoutVote_up_relationsInput = {
    id?: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    post: postsCreateNestedOneWithoutAnswersInput
    user: usersCreateNestedOneWithoutAnswersInput
    vote_down_relations?: vote_downCreateNestedManyWithoutAnswerInput
  }

  export type answersUncheckedCreateWithoutVote_up_relationsInput = {
    id?: string
    posts_id: string
    users_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    vote_down_relations?: vote_downUncheckedCreateNestedManyWithoutAnswerInput
  }

  export type answersCreateOrConnectWithoutVote_up_relationsInput = {
    where: answersWhereUniqueInput
    create: XOR<answersCreateWithoutVote_up_relationsInput, answersUncheckedCreateWithoutVote_up_relationsInput>
  }

  export type usersCreateWithoutVote_upInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsCreateNestedManyWithoutUserInput
    posts_like?: posts_likeCreateNestedManyWithoutUserInput
    answers?: answersCreateNestedManyWithoutUserInput
    vote_down?: vote_downCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutVote_upInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsUncheckedCreateNestedManyWithoutUserInput
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutUserInput
    answers?: answersUncheckedCreateNestedManyWithoutUserInput
    vote_down?: vote_downUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutVote_upInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVote_upInput, usersUncheckedCreateWithoutVote_upInput>
  }

  export type answersUpsertWithoutVote_up_relationsInput = {
    update: XOR<answersUpdateWithoutVote_up_relationsInput, answersUncheckedUpdateWithoutVote_up_relationsInput>
    create: XOR<answersCreateWithoutVote_up_relationsInput, answersUncheckedCreateWithoutVote_up_relationsInput>
    where?: answersWhereInput
  }

  export type answersUpdateToOneWithWhereWithoutVote_up_relationsInput = {
    where?: answersWhereInput
    data: XOR<answersUpdateWithoutVote_up_relationsInput, answersUncheckedUpdateWithoutVote_up_relationsInput>
  }

  export type answersUpdateWithoutVote_up_relationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postsUpdateOneRequiredWithoutAnswersNestedInput
    user?: usersUpdateOneRequiredWithoutAnswersNestedInput
    vote_down_relations?: vote_downUpdateManyWithoutAnswerNestedInput
  }

  export type answersUncheckedUpdateWithoutVote_up_relationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_down_relations?: vote_downUncheckedUpdateManyWithoutAnswerNestedInput
  }

  export type usersUpsertWithoutVote_upInput = {
    update: XOR<usersUpdateWithoutVote_upInput, usersUncheckedUpdateWithoutVote_upInput>
    create: XOR<usersCreateWithoutVote_upInput, usersUncheckedCreateWithoutVote_upInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutVote_upInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutVote_upInput, usersUncheckedUpdateWithoutVote_upInput>
  }

  export type usersUpdateWithoutVote_upInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUpdateManyWithoutUserNestedInput
    answers?: answersUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutVote_upInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUncheckedUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUncheckedUpdateManyWithoutUserNestedInput
    answers?: answersUncheckedUpdateManyWithoutUserNestedInput
    vote_down?: vote_downUncheckedUpdateManyWithoutUserNestedInput
  }

  export type answersCreateWithoutVote_down_relationsInput = {
    id?: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    post: postsCreateNestedOneWithoutAnswersInput
    user: usersCreateNestedOneWithoutAnswersInput
    vote_up_relations?: vote_upCreateNestedManyWithoutAnswerInput
  }

  export type answersUncheckedCreateWithoutVote_down_relationsInput = {
    id?: string
    posts_id: string
    users_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
    vote_up_relations?: vote_upUncheckedCreateNestedManyWithoutAnswerInput
  }

  export type answersCreateOrConnectWithoutVote_down_relationsInput = {
    where: answersWhereUniqueInput
    create: XOR<answersCreateWithoutVote_down_relationsInput, answersUncheckedCreateWithoutVote_down_relationsInput>
  }

  export type usersCreateWithoutVote_downInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsCreateNestedManyWithoutUserInput
    posts_like?: posts_likeCreateNestedManyWithoutUserInput
    answers?: answersCreateNestedManyWithoutUserInput
    vote_up?: vote_upCreateNestedManyWithoutUserInput
  }

  export type usersUncheckedCreateWithoutVote_downInput = {
    id?: string
    username: string
    password: string
    full_name?: string | null
    profile_url?: string | null
    nidn_or_nim?: string | null
    nama_perguruan_tinggi?: string | null
    role?: string | null
    create_at?: Date | string
    update_at?: Date | string
    posts?: postsUncheckedCreateNestedManyWithoutUserInput
    posts_like?: posts_likeUncheckedCreateNestedManyWithoutUserInput
    answers?: answersUncheckedCreateNestedManyWithoutUserInput
    vote_up?: vote_upUncheckedCreateNestedManyWithoutUserInput
  }

  export type usersCreateOrConnectWithoutVote_downInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVote_downInput, usersUncheckedCreateWithoutVote_downInput>
  }

  export type answersUpsertWithoutVote_down_relationsInput = {
    update: XOR<answersUpdateWithoutVote_down_relationsInput, answersUncheckedUpdateWithoutVote_down_relationsInput>
    create: XOR<answersCreateWithoutVote_down_relationsInput, answersUncheckedCreateWithoutVote_down_relationsInput>
    where?: answersWhereInput
  }

  export type answersUpdateToOneWithWhereWithoutVote_down_relationsInput = {
    where?: answersWhereInput
    data: XOR<answersUpdateWithoutVote_down_relationsInput, answersUncheckedUpdateWithoutVote_down_relationsInput>
  }

  export type answersUpdateWithoutVote_down_relationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postsUpdateOneRequiredWithoutAnswersNestedInput
    user?: usersUpdateOneRequiredWithoutAnswersNestedInput
    vote_up_relations?: vote_upUpdateManyWithoutAnswerNestedInput
  }

  export type answersUncheckedUpdateWithoutVote_down_relationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_up_relations?: vote_upUncheckedUpdateManyWithoutAnswerNestedInput
  }

  export type usersUpsertWithoutVote_downInput = {
    update: XOR<usersUpdateWithoutVote_downInput, usersUncheckedUpdateWithoutVote_downInput>
    create: XOR<usersCreateWithoutVote_downInput, usersUncheckedCreateWithoutVote_downInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutVote_downInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutVote_downInput, usersUncheckedUpdateWithoutVote_downInput>
  }

  export type usersUpdateWithoutVote_downInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUpdateManyWithoutUserNestedInput
    answers?: answersUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUpdateManyWithoutUserNestedInput
  }

  export type usersUncheckedUpdateWithoutVote_downInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_url?: NullableStringFieldUpdateOperationsInput | string | null
    nidn_or_nim?: NullableStringFieldUpdateOperationsInput | string | null
    nama_perguruan_tinggi?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: postsUncheckedUpdateManyWithoutUserNestedInput
    posts_like?: posts_likeUncheckedUpdateManyWithoutUserNestedInput
    answers?: answersUncheckedUpdateManyWithoutUserNestedInput
    vote_up?: vote_upUncheckedUpdateManyWithoutUserNestedInput
  }

  export type postsCreateManyUserInput = {
    id?: string
    img_url?: string | null
    content?: string | null
    count_answers?: number | null
    count_like?: number | null
    create_at?: Date | string
    update_at?: Date | string
  }

  export type posts_likeCreateManyUserInput = {
    id?: string
    posts_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type answersCreateManyUserInput = {
    id?: string
    posts_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_upCreateManyUserInput = {
    id?: string
    answers_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_downCreateManyUserInput = {
    id?: string
    answers_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type postsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts_like?: posts_likeUpdateManyWithoutPostNestedInput
    answers?: answersUpdateManyWithoutPostNestedInput
  }

  export type postsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    posts_like?: posts_likeUncheckedUpdateManyWithoutPostNestedInput
    answers?: answersUncheckedUpdateManyWithoutPostNestedInput
  }

  export type postsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    img_url?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    count_answers?: NullableIntFieldUpdateOperationsInput | number | null
    count_like?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type posts_likeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postsUpdateOneRequiredWithoutPosts_likeNestedInput
  }

  export type posts_likeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type posts_likeUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type answersUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: postsUpdateOneRequiredWithoutAnswersNestedInput
    vote_up_relations?: vote_upUpdateManyWithoutAnswerNestedInput
    vote_down_relations?: vote_downUpdateManyWithoutAnswerNestedInput
  }

  export type answersUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_up_relations?: vote_upUncheckedUpdateManyWithoutAnswerNestedInput
    vote_down_relations?: vote_downUncheckedUpdateManyWithoutAnswerNestedInput
  }

  export type answersUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    posts_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_upUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    answer?: answersUpdateOneRequiredWithoutVote_up_relationsNestedInput
  }

  export type vote_upUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_upUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_downUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    answer?: answersUpdateOneRequiredWithoutVote_down_relationsNestedInput
  }

  export type vote_downUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_downUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type posts_likeCreateManyPostInput = {
    id?: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type answersCreateManyPostInput = {
    id?: string
    users_id: string
    answers?: string | null
    vote_up?: number | null
    vote_down?: number | null
    create_at?: Date | string
    update_at?: Date | string
  }

  export type posts_likeUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutPosts_likeNestedInput
  }

  export type posts_likeUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type posts_likeUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type answersUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutAnswersNestedInput
    vote_up_relations?: vote_upUpdateManyWithoutAnswerNestedInput
    vote_down_relations?: vote_downUpdateManyWithoutAnswerNestedInput
  }

  export type answersUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    vote_up_relations?: vote_upUncheckedUpdateManyWithoutAnswerNestedInput
    vote_down_relations?: vote_downUncheckedUpdateManyWithoutAnswerNestedInput
  }

  export type answersUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    answers?: NullableStringFieldUpdateOperationsInput | string | null
    vote_up?: NullableIntFieldUpdateOperationsInput | number | null
    vote_down?: NullableIntFieldUpdateOperationsInput | number | null
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_upCreateManyAnswerInput = {
    id?: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_downCreateManyAnswerInput = {
    id?: string
    users_id: string
    create_at?: Date | string
    update_at?: Date | string
  }

  export type vote_upUpdateWithoutAnswerInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutVote_upNestedInput
  }

  export type vote_upUncheckedUpdateWithoutAnswerInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_upUncheckedUpdateManyWithoutAnswerInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_downUpdateWithoutAnswerInput = {
    id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: usersUpdateOneRequiredWithoutVote_downNestedInput
  }

  export type vote_downUncheckedUpdateWithoutAnswerInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type vote_downUncheckedUpdateManyWithoutAnswerInput = {
    id?: StringFieldUpdateOperationsInput | string
    users_id?: StringFieldUpdateOperationsInput | string
    create_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostsCountOutputTypeDefaultArgs instead
     */
    export type PostsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnswersCountOutputTypeDefaultArgs instead
     */
    export type AnswersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AnswersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use postsDefaultArgs instead
     */
    export type postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = postsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use posts_likeDefaultArgs instead
     */
    export type posts_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = posts_likeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use answersDefaultArgs instead
     */
    export type answersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = answersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use vote_upDefaultArgs instead
     */
    export type vote_upArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = vote_upDefaultArgs<ExtArgs>
    /**
     * @deprecated Use vote_downDefaultArgs instead
     */
    export type vote_downArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = vote_downDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}